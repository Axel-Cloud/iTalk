{
  "{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\SalaA\\\\OneDrive\\\\Documents\\\\GitHub\\\\iTalk\\\\backend\\\\src\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\SalaA\\\\OneDrive\\\\Documents\\\\GitHub\\\\iTalk\\\\backend\",\"filename\":\"C:\\\\Users\\\\SalaA\\\\OneDrive\\\\Documents\\\\GitHub\\\\iTalk\\\\backend\\\\src\\\\Index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\SalaA\\\\OneDrive\\\\Documents\\\\GitHub\\\\iTalk\\\\backend\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"inject-polyfills\",\"visitor\":{\"MemberExpression\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":{},\"_verified\":{},\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"SpreadElement\":{\"enter\":[null]},\"YieldExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"method\":\"usage-global\",\"version\":\"3.6.5\",\"targets\":{\"chrome\":\"67.0.0\",\"edge\":\"17.0.0\",\"firefox\":\"60.0.0\",\"safari\":\"11.1.0\"},\"include\":{},\"exclude\":{},\"proposals\":false,\"shippedProposals\":false,\"debug\":false}},{\"key\":\"preset-env/replace-babel-polyfill\",\"visitor\":{\"ImportDeclaration\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"usage\":true,\"deprecated\":true}}],\"presets\":[]}:7.15.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "C:\\Users\\SalaA\\OneDrive\\Documents\\GitHub\\iTalk\\backend\\src\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\SalaA\\OneDrive\\Documents\\GitHub\\iTalk\\backend",
      "filename": "C:\\Users\\SalaA\\OneDrive\\Documents\\GitHub\\iTalk\\backend\\src\\Index.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "C:\\Users\\SalaA\\OneDrive\\Documents\\GitHub\\iTalk\\backend",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "BinaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "inject-polyfills",
          "visitor": {
            "MemberExpression": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": {},
            "_verified": {},
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "SpreadElement": {
              "enter": [
                null
              ]
            },
            "YieldExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "method": "usage-global",
            "version": "3.6.5",
            "targets": {
              "chrome": "67.0.0",
              "edge": "17.0.0",
              "firefox": "60.0.0",
              "safari": "11.1.0"
            },
            "include": {},
            "exclude": {},
            "proposals": false,
            "shippedProposals": false,
            "debug": false
          }
        },
        {
          "key": "preset-env/replace-babel-polyfill",
          "visitor": {
            "ImportDeclaration": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "usage": true,
            "deprecated": true
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\SalaA\\OneDrive\\Documents\\GitHub\\iTalk\\backend\\src\\Index.js",
        "plugins": [
          "privateIn",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\SalaA\\OneDrive\\Documents\\GitHub\\iTalk\\backend\\src\\Index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\SalaA\\OneDrive\\Documents\\GitHub\\iTalk\\backend\\src\\",
        "sourceFileName": "Index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _cors = _interopRequireDefault(require(\"cors\"));\n\nvar _http = require(\"http\");\n\nvar _socket = require(\"socket.io\");\n\nrequire(\"./Database/db\");\n\nvar _Users = _interopRequireDefault(require(\"./Database/Controllers/Users\"));\n\nvar _Conversation = _interopRequireDefault(require(\"./Database/Controllers/Conversation\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n//Controllers\nrequire('dotenv').config();\n\nconst App = (0, _express.default)();\nconst httpServer = (0, _http.createServer)(App);\nconst SocketIO = new _socket.Server(httpServer, {\n  cors: {\n    origin: '*'\n  }\n});\n/* Server Settings */\n\nprocess.setMaxListeners(0);\nApp.set(\"Port\", process.env.Port || 3003);\n/* Middlewares */\n\nApp.use((0, _cors.default)());\nApp.use(_express.default.json());\n/* Server Routes */\n\nApp.use(\"/api/Users\", require(\"./Routes/Users\"));\nApp.use(\"/api/Conversation\", require(\"./Routes/Conversation\")); //SocketIO\n\nSocketIO.on(\"connection\", Socket => {\n  Socket.on(\"SetUser\", UserID => {\n    Socket.join(UserID);\n\n    _Users.default.UpdateOnline({\n      ID: UserID.UserID,\n      Online: true\n    });\n  });\n  Socket.on(\"UnsetUser\", UserID => {\n    Socket.leave(UserID);\n\n    _Users.default.UpdateOnline({\n      ID: UserID.UserID,\n      Online: false\n    });\n  });\n  Socket.on(\"Message\", _ref => {\n    let {\n      ConversationID,\n      UserID,\n      Message\n    } = _ref;\n\n    _Conversation.default.NewMessage({\n      ConversationID,\n      UserID,\n      Message\n    }, SocketIO);\n  });\n});\n/* Server Listen */\n\nhttpServer.listen(App.get(\"Port\"), () => {\n  console.log(\"Listen on port \".concat(App.get(\"Port\")));\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkluZGV4LmpzIl0sIm5hbWVzIjpbInJlcXVpcmUiLCJjb25maWciLCJBcHAiLCJodHRwU2VydmVyIiwiU29ja2V0SU8iLCJTZXJ2ZXIiLCJjb3JzIiwib3JpZ2luIiwicHJvY2VzcyIsInNldE1heExpc3RlbmVycyIsInNldCIsImVudiIsIlBvcnQiLCJ1c2UiLCJleHByZXNzIiwianNvbiIsIm9uIiwiU29ja2V0IiwiVXNlcklEIiwiam9pbiIsIlVzZXJzIiwiVXBkYXRlT25saW5lIiwiSUQiLCJPbmxpbmUiLCJsZWF2ZSIsIkNvbnZlcnNhdGlvbklEIiwiTWVzc2FnZSIsIkNvbnZlcnNhdGlvbnMiLCJOZXdNZXNzYWdlIiwibGlzdGVuIiwiZ2V0IiwiY29uc29sZSIsImxvZyJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFHQTs7QUFDQTs7OztBQUZBO0FBSUFBLE9BQU8sQ0FBQyxRQUFELENBQVAsQ0FBa0JDLE1BQWxCOztBQUVBLE1BQU1DLEdBQUcsR0FBRyx1QkFBWjtBQUNBLE1BQU1DLFVBQVUsR0FBRyx3QkFBYUQsR0FBYixDQUFuQjtBQUNBLE1BQU1FLFFBQVEsR0FBRyxJQUFJQyxjQUFKLENBQVdGLFVBQVgsRUFBdUI7QUFBRUcsRUFBQUEsSUFBSSxFQUFFO0FBQUVDLElBQUFBLE1BQU0sRUFBRTtBQUFWO0FBQVIsQ0FBdkIsQ0FBakI7QUFFQTs7QUFDQUMsT0FBTyxDQUFDQyxlQUFSLENBQXdCLENBQXhCO0FBQ0FQLEdBQUcsQ0FBQ1EsR0FBSixDQUFRLE1BQVIsRUFBZ0JGLE9BQU8sQ0FBQ0csR0FBUixDQUFZQyxJQUFaLElBQW9CLElBQXBDO0FBRUE7O0FBQ0FWLEdBQUcsQ0FBQ1csR0FBSixDQUFRLG9CQUFSO0FBQ0FYLEdBQUcsQ0FBQ1csR0FBSixDQUFRQyxpQkFBUUMsSUFBUixFQUFSO0FBRUE7O0FBQ0FiLEdBQUcsQ0FBQ1csR0FBSixDQUFRLFlBQVIsRUFBc0JiLE9BQU8sQ0FBQyxnQkFBRCxDQUE3QjtBQUNBRSxHQUFHLENBQUNXLEdBQUosQ0FBUSxtQkFBUixFQUE2QmIsT0FBTyxDQUFDLHVCQUFELENBQXBDLEUsQ0FFQTs7QUFDQUksUUFBUSxDQUFDWSxFQUFULENBQVksWUFBWixFQUEyQkMsTUFBRCxJQUFZO0FBQ2xDQSxFQUFBQSxNQUFNLENBQUNELEVBQVAsQ0FBVSxTQUFWLEVBQXNCRSxNQUFELElBQVk7QUFDN0JELElBQUFBLE1BQU0sQ0FBQ0UsSUFBUCxDQUFZRCxNQUFaOztBQUNBRSxtQkFBTUMsWUFBTixDQUFtQjtBQUFDQyxNQUFBQSxFQUFFLEVBQUVKLE1BQU0sQ0FBQ0EsTUFBWjtBQUFvQkssTUFBQUEsTUFBTSxFQUFFO0FBQTVCLEtBQW5CO0FBQ0gsR0FIRDtBQUtBTixFQUFBQSxNQUFNLENBQUNELEVBQVAsQ0FBVSxXQUFWLEVBQXdCRSxNQUFELElBQVk7QUFDL0JELElBQUFBLE1BQU0sQ0FBQ08sS0FBUCxDQUFhTixNQUFiOztBQUNBRSxtQkFBTUMsWUFBTixDQUFtQjtBQUFDQyxNQUFBQSxFQUFFLEVBQUVKLE1BQU0sQ0FBQ0EsTUFBWjtBQUFvQkssTUFBQUEsTUFBTSxFQUFFO0FBQTVCLEtBQW5CO0FBQ0gsR0FIRDtBQUtBTixFQUFBQSxNQUFNLENBQUNELEVBQVAsQ0FBVSxTQUFWLEVBQXFCLFFBQXVDO0FBQUEsUUFBdEM7QUFBQ1MsTUFBQUEsY0FBRDtBQUFpQlAsTUFBQUEsTUFBakI7QUFBeUJRLE1BQUFBO0FBQXpCLEtBQXNDOztBQUN4REMsMEJBQWNDLFVBQWQsQ0FBeUI7QUFBQ0gsTUFBQUEsY0FBRDtBQUFpQlAsTUFBQUEsTUFBakI7QUFBeUJRLE1BQUFBO0FBQXpCLEtBQXpCLEVBQTREdEIsUUFBNUQ7QUFDSCxHQUZEO0FBR0gsQ0FkRDtBQWdCQTs7QUFDQUQsVUFBVSxDQUFDMEIsTUFBWCxDQUFrQjNCLEdBQUcsQ0FBQzRCLEdBQUosQ0FBUSxNQUFSLENBQWxCLEVBQW1DLE1BQU07QUFDckNDLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUiwwQkFBOEI5QixHQUFHLENBQUM0QixHQUFKLENBQVEsTUFBUixDQUE5QjtBQUNILENBRkQiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxTYWxhQVxcT25lRHJpdmVcXERvY3VtZW50c1xcR2l0SHViXFxpVGFsa1xcYmFja2VuZFxcc3JjXFwiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZXhwcmVzcyBmcm9tIFwiZXhwcmVzc1wiO1xuaW1wb3J0IENvcnMgZnJvbSBcImNvcnNcIjtcbmltcG9ydCB7IGNyZWF0ZVNlcnZlciB9IGZyb20gXCJodHRwXCI7XG5pbXBvcnQgeyBTZXJ2ZXIgfSBmcm9tIFwic29ja2V0LmlvXCI7XG5pbXBvcnQgXCIuL0RhdGFiYXNlL2RiXCI7XG5cbi8vQ29udHJvbGxlcnNcbmltcG9ydCBVc2VycyBmcm9tIFwiLi9EYXRhYmFzZS9Db250cm9sbGVycy9Vc2Vyc1wiO1xuaW1wb3J0IENvbnZlcnNhdGlvbnMgZnJvbSBcIi4vRGF0YWJhc2UvQ29udHJvbGxlcnMvQ29udmVyc2F0aW9uXCI7XG5cbnJlcXVpcmUoJ2RvdGVudicpLmNvbmZpZygpO1xuXG5jb25zdCBBcHAgPSBleHByZXNzKCk7XG5jb25zdCBodHRwU2VydmVyID0gY3JlYXRlU2VydmVyKEFwcCk7XG5jb25zdCBTb2NrZXRJTyA9IG5ldyBTZXJ2ZXIoaHR0cFNlcnZlciwgeyBjb3JzOiB7IG9yaWdpbjogJyonIH0gfSk7XG5cbi8qIFNlcnZlciBTZXR0aW5ncyAqL1xucHJvY2Vzcy5zZXRNYXhMaXN0ZW5lcnMoMClcbkFwcC5zZXQoXCJQb3J0XCIsIHByb2Nlc3MuZW52LlBvcnQgfHwgMzAwMyk7XG5cbi8qIE1pZGRsZXdhcmVzICovXG5BcHAudXNlKENvcnMoKSk7XG5BcHAudXNlKGV4cHJlc3MuanNvbigpKTtcblxuLyogU2VydmVyIFJvdXRlcyAqL1xuQXBwLnVzZShcIi9hcGkvVXNlcnNcIiwgcmVxdWlyZShcIi4vUm91dGVzL1VzZXJzXCIpKTtcbkFwcC51c2UoXCIvYXBpL0NvbnZlcnNhdGlvblwiLCByZXF1aXJlKFwiLi9Sb3V0ZXMvQ29udmVyc2F0aW9uXCIpKTtcblxuLy9Tb2NrZXRJT1xuU29ja2V0SU8ub24oXCJjb25uZWN0aW9uXCIsIChTb2NrZXQpID0+IHtcbiAgICBTb2NrZXQub24oXCJTZXRVc2VyXCIsIChVc2VySUQpID0+IHtcbiAgICAgICAgU29ja2V0LmpvaW4oVXNlcklEKTtcbiAgICAgICAgVXNlcnMuVXBkYXRlT25saW5lKHtJRDogVXNlcklELlVzZXJJRCwgT25saW5lOiB0cnVlfSk7XG4gICAgfSk7XG5cbiAgICBTb2NrZXQub24oXCJVbnNldFVzZXJcIiwgKFVzZXJJRCkgPT4ge1xuICAgICAgICBTb2NrZXQubGVhdmUoVXNlcklEKTtcbiAgICAgICAgVXNlcnMuVXBkYXRlT25saW5lKHtJRDogVXNlcklELlVzZXJJRCwgT25saW5lOiBmYWxzZX0pO1xuICAgIH0pO1xuXG4gICAgU29ja2V0Lm9uKFwiTWVzc2FnZVwiLCAoe0NvbnZlcnNhdGlvbklELCBVc2VySUQsIE1lc3NhZ2V9KSA9PiB7XG4gICAgICAgIENvbnZlcnNhdGlvbnMuTmV3TWVzc2FnZSh7Q29udmVyc2F0aW9uSUQsIFVzZXJJRCwgTWVzc2FnZX0sIFNvY2tldElPKTtcbiAgICB9KVxufSk7XG5cbi8qIFNlcnZlciBMaXN0ZW4gKi9cbmh0dHBTZXJ2ZXIubGlzdGVuKEFwcC5nZXQoXCJQb3J0XCIpLCAoKSA9PiB7XG4gICAgY29uc29sZS5sb2coYExpc3RlbiBvbiBwb3J0ICR7QXBwLmdldChcIlBvcnRcIil9YCk7XG59KTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "Index.js"
      ],
      "names": [
        "require",
        "config",
        "App",
        "httpServer",
        "SocketIO",
        "Server",
        "cors",
        "origin",
        "process",
        "setMaxListeners",
        "set",
        "env",
        "Port",
        "use",
        "express",
        "json",
        "on",
        "Socket",
        "UserID",
        "join",
        "Users",
        "UpdateOnline",
        "ID",
        "Online",
        "leave",
        "ConversationID",
        "Message",
        "Conversations",
        "NewMessage",
        "listen",
        "get",
        "console",
        "log"
      ],
      "mappings": ";;AAAA;;AACA;;AACA;;AACA;;AACA;;AAGA;;AACA;;;;AAFA;AAIAA,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB;;AAEA,MAAMC,GAAG,GAAG,uBAAZ;AACA,MAAMC,UAAU,GAAG,wBAAaD,GAAb,CAAnB;AACA,MAAME,QAAQ,GAAG,IAAIC,cAAJ,CAAWF,UAAX,EAAuB;AAAEG,EAAAA,IAAI,EAAE;AAAEC,IAAAA,MAAM,EAAE;AAAV;AAAR,CAAvB,CAAjB;AAEA;;AACAC,OAAO,CAACC,eAAR,CAAwB,CAAxB;AACAP,GAAG,CAACQ,GAAJ,CAAQ,MAAR,EAAgBF,OAAO,CAACG,GAAR,CAAYC,IAAZ,IAAoB,IAApC;AAEA;;AACAV,GAAG,CAACW,GAAJ,CAAQ,oBAAR;AACAX,GAAG,CAACW,GAAJ,CAAQC,iBAAQC,IAAR,EAAR;AAEA;;AACAb,GAAG,CAACW,GAAJ,CAAQ,YAAR,EAAsBb,OAAO,CAAC,gBAAD,CAA7B;AACAE,GAAG,CAACW,GAAJ,CAAQ,mBAAR,EAA6Bb,OAAO,CAAC,uBAAD,CAApC,E,CAEA;;AACAI,QAAQ,CAACY,EAAT,CAAY,YAAZ,EAA2BC,MAAD,IAAY;AAClCA,EAAAA,MAAM,CAACD,EAAP,CAAU,SAAV,EAAsBE,MAAD,IAAY;AAC7BD,IAAAA,MAAM,CAACE,IAAP,CAAYD,MAAZ;;AACAE,mBAAMC,YAAN,CAAmB;AAACC,MAAAA,EAAE,EAAEJ,MAAM,CAACA,MAAZ;AAAoBK,MAAAA,MAAM,EAAE;AAA5B,KAAnB;AACH,GAHD;AAKAN,EAAAA,MAAM,CAACD,EAAP,CAAU,WAAV,EAAwBE,MAAD,IAAY;AAC/BD,IAAAA,MAAM,CAACO,KAAP,CAAaN,MAAb;;AACAE,mBAAMC,YAAN,CAAmB;AAACC,MAAAA,EAAE,EAAEJ,MAAM,CAACA,MAAZ;AAAoBK,MAAAA,MAAM,EAAE;AAA5B,KAAnB;AACH,GAHD;AAKAN,EAAAA,MAAM,CAACD,EAAP,CAAU,SAAV,EAAqB,QAAuC;AAAA,QAAtC;AAACS,MAAAA,cAAD;AAAiBP,MAAAA,MAAjB;AAAyBQ,MAAAA;AAAzB,KAAsC;;AACxDC,0BAAcC,UAAd,CAAyB;AAACH,MAAAA,cAAD;AAAiBP,MAAAA,MAAjB;AAAyBQ,MAAAA;AAAzB,KAAzB,EAA4DtB,QAA5D;AACH,GAFD;AAGH,CAdD;AAgBA;;AACAD,UAAU,CAAC0B,MAAX,CAAkB3B,GAAG,CAAC4B,GAAJ,CAAQ,MAAR,CAAlB,EAAmC,MAAM;AACrCC,EAAAA,OAAO,CAACC,GAAR,0BAA8B9B,GAAG,CAAC4B,GAAJ,CAAQ,MAAR,CAA9B;AACH,CAFD",
      "sourceRoot": "C:\\Users\\SalaA\\OneDrive\\Documents\\GitHub\\iTalk\\backend\\src\\",
      "sourcesContent": [
        "import express from \"express\";\nimport Cors from \"cors\";\nimport { createServer } from \"http\";\nimport { Server } from \"socket.io\";\nimport \"./Database/db\";\n\n//Controllers\nimport Users from \"./Database/Controllers/Users\";\nimport Conversations from \"./Database/Controllers/Conversation\";\n\nrequire('dotenv').config();\n\nconst App = express();\nconst httpServer = createServer(App);\nconst SocketIO = new Server(httpServer, { cors: { origin: '*' } });\n\n/* Server Settings */\nprocess.setMaxListeners(0)\nApp.set(\"Port\", process.env.Port || 3003);\n\n/* Middlewares */\nApp.use(Cors());\nApp.use(express.json());\n\n/* Server Routes */\nApp.use(\"/api/Users\", require(\"./Routes/Users\"));\nApp.use(\"/api/Conversation\", require(\"./Routes/Conversation\"));\n\n//SocketIO\nSocketIO.on(\"connection\", (Socket) => {\n    Socket.on(\"SetUser\", (UserID) => {\n        Socket.join(UserID);\n        Users.UpdateOnline({ID: UserID.UserID, Online: true});\n    });\n\n    Socket.on(\"UnsetUser\", (UserID) => {\n        Socket.leave(UserID);\n        Users.UpdateOnline({ID: UserID.UserID, Online: false});\n    });\n\n    Socket.on(\"Message\", ({ConversationID, UserID, Message}) => {\n        Conversations.NewMessage({ConversationID, UserID, Message}, SocketIO);\n    })\n});\n\n/* Server Listen */\nhttpServer.listen(App.get(\"Port\"), () => {\n    console.log(`Listen on port ${App.get(\"Port\")}`);\n});"
      ]
    },
    "sourceType": "script",
    "mtime": 1637702368922
  },
  "{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\SalaA\\\\OneDrive\\\\Documents\\\\GitHub\\\\iTalk\\\\backend\\\\src\\\\Database\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\SalaA\\\\OneDrive\\\\Documents\\\\GitHub\\\\iTalk\\\\backend\",\"filename\":\"C:\\\\Users\\\\SalaA\\\\OneDrive\\\\Documents\\\\GitHub\\\\iTalk\\\\backend\\\\src\\\\Database\\\\db.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\SalaA\\\\OneDrive\\\\Documents\\\\GitHub\\\\iTalk\\\\backend\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"inject-polyfills\",\"visitor\":{\"MemberExpression\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":{},\"_verified\":{},\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"SpreadElement\":{\"enter\":[null]},\"YieldExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"method\":\"usage-global\",\"version\":\"3.6.5\",\"targets\":{\"chrome\":\"67.0.0\",\"edge\":\"17.0.0\",\"firefox\":\"60.0.0\",\"safari\":\"11.1.0\"},\"include\":{},\"exclude\":{},\"proposals\":false,\"shippedProposals\":false,\"debug\":false}},{\"key\":\"preset-env/replace-babel-polyfill\",\"visitor\":{\"ImportDeclaration\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"usage\":true,\"deprecated\":true}}],\"presets\":[]}:7.15.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "C:\\Users\\SalaA\\OneDrive\\Documents\\GitHub\\iTalk\\backend\\src\\Database\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\SalaA\\OneDrive\\Documents\\GitHub\\iTalk\\backend",
      "filename": "C:\\Users\\SalaA\\OneDrive\\Documents\\GitHub\\iTalk\\backend\\src\\Database\\db.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "C:\\Users\\SalaA\\OneDrive\\Documents\\GitHub\\iTalk\\backend",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "BinaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "inject-polyfills",
          "visitor": {
            "MemberExpression": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": {},
            "_verified": {},
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "SpreadElement": {
              "enter": [
                null
              ]
            },
            "YieldExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "method": "usage-global",
            "version": "3.6.5",
            "targets": {
              "chrome": "67.0.0",
              "edge": "17.0.0",
              "firefox": "60.0.0",
              "safari": "11.1.0"
            },
            "include": {},
            "exclude": {},
            "proposals": false,
            "shippedProposals": false,
            "debug": false
          }
        },
        {
          "key": "preset-env/replace-babel-polyfill",
          "visitor": {
            "ImportDeclaration": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "usage": true,
            "deprecated": true
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\SalaA\\OneDrive\\Documents\\GitHub\\iTalk\\backend\\src\\Database\\db.js",
        "plugins": [
          "privateIn",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\SalaA\\OneDrive\\Documents\\GitHub\\iTalk\\backend\\src\\Database\\db.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\SalaA\\OneDrive\\Documents\\GitHub\\iTalk\\backend\\src\\Database\\",
        "sourceFileName": "db.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _mongoose = _interopRequireDefault(require(\"mongoose\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n_mongoose.default.set('useNewUrlParser', true);\n\n_mongoose.default.set('useFindAndModify', false);\n\n_mongoose.default.set('useCreateIndex', true);\n\n_mongoose.default.set('useUnifiedTopology', true);\n\n_mongoose.default.connect(\"mongodb://localhost:27017/iTalk\", {\n  useNewUrlParser: true,\n  useUnifiedTopology: true\n});\n\nconst db = _mongoose.default.connection;\ndb.on('error', () => {\n  console.log(\"Error on connection\");\n});\ndb.once('open', () => {\n  console.log(\"Connected\");\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRiLmpzIl0sIm5hbWVzIjpbIm1vbmdvb3NlIiwic2V0IiwiY29ubmVjdCIsInVzZU5ld1VybFBhcnNlciIsInVzZVVuaWZpZWRUb3BvbG9neSIsImRiIiwiY29ubmVjdGlvbiIsIm9uIiwiY29uc29sZSIsImxvZyIsIm9uY2UiXSwibWFwcGluZ3MiOiI7O0FBQUE7Ozs7QUFFQUEsa0JBQVNDLEdBQVQsQ0FBYSxpQkFBYixFQUFnQyxJQUFoQzs7QUFDQUQsa0JBQVNDLEdBQVQsQ0FBYSxrQkFBYixFQUFpQyxLQUFqQzs7QUFDQUQsa0JBQVNDLEdBQVQsQ0FBYSxnQkFBYixFQUErQixJQUEvQjs7QUFDQUQsa0JBQVNDLEdBQVQsQ0FBYSxvQkFBYixFQUFtQyxJQUFuQzs7QUFFQUQsa0JBQVNFLE9BQVQsQ0FBaUIsaUNBQWpCLEVBQW9EO0FBQ2xEQyxFQUFBQSxlQUFlLEVBQUUsSUFEaUM7QUFFbERDLEVBQUFBLGtCQUFrQixFQUFFO0FBRjhCLENBQXBEOztBQUtBLE1BQU1DLEVBQUUsR0FBR0wsa0JBQVNNLFVBQXBCO0FBRUFELEVBQUUsQ0FBQ0UsRUFBSCxDQUFNLE9BQU4sRUFBZSxNQUFNO0FBQ2pCQyxFQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxxQkFBWjtBQUNILENBRkQ7QUFJQUosRUFBRSxDQUFDSyxJQUFILENBQVEsTUFBUixFQUFnQixNQUFNO0FBQ2xCRixFQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxXQUFaO0FBQ0gsQ0FGRCIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXFNhbGFBXFxPbmVEcml2ZVxcRG9jdW1lbnRzXFxHaXRIdWJcXGlUYWxrXFxiYWNrZW5kXFxzcmNcXERhdGFiYXNlXFwiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgbW9uZ29vc2UgZnJvbSBcIm1vbmdvb3NlXCI7XG5cbm1vbmdvb3NlLnNldCgndXNlTmV3VXJsUGFyc2VyJywgdHJ1ZSk7XG5tb25nb29zZS5zZXQoJ3VzZUZpbmRBbmRNb2RpZnknLCBmYWxzZSk7XG5tb25nb29zZS5zZXQoJ3VzZUNyZWF0ZUluZGV4JywgdHJ1ZSk7XG5tb25nb29zZS5zZXQoJ3VzZVVuaWZpZWRUb3BvbG9neScsIHRydWUpO1xuXG5tb25nb29zZS5jb25uZWN0KFwibW9uZ29kYjovL2xvY2FsaG9zdDoyNzAxNy9pVGFsa1wiLCB7XG4gIHVzZU5ld1VybFBhcnNlcjogdHJ1ZSxcbiAgdXNlVW5pZmllZFRvcG9sb2d5OiB0cnVlLFxufSk7XG5cbmNvbnN0IGRiID0gbW9uZ29vc2UuY29ubmVjdGlvbjtcblxuZGIub24oJ2Vycm9yJywgKCkgPT4ge1xuICAgIGNvbnNvbGUubG9nKFwiRXJyb3Igb24gY29ubmVjdGlvblwiKTtcbn0pO1xuXG5kYi5vbmNlKCdvcGVuJywgKCkgPT4geyAgIFxuICAgIGNvbnNvbGUubG9nKFwiQ29ubmVjdGVkXCIpXG59KTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "db.js"
      ],
      "names": [
        "mongoose",
        "set",
        "connect",
        "useNewUrlParser",
        "useUnifiedTopology",
        "db",
        "connection",
        "on",
        "console",
        "log",
        "once"
      ],
      "mappings": ";;AAAA;;;;AAEAA,kBAASC,GAAT,CAAa,iBAAb,EAAgC,IAAhC;;AACAD,kBAASC,GAAT,CAAa,kBAAb,EAAiC,KAAjC;;AACAD,kBAASC,GAAT,CAAa,gBAAb,EAA+B,IAA/B;;AACAD,kBAASC,GAAT,CAAa,oBAAb,EAAmC,IAAnC;;AAEAD,kBAASE,OAAT,CAAiB,iCAAjB,EAAoD;AAClDC,EAAAA,eAAe,EAAE,IADiC;AAElDC,EAAAA,kBAAkB,EAAE;AAF8B,CAApD;;AAKA,MAAMC,EAAE,GAAGL,kBAASM,UAApB;AAEAD,EAAE,CAACE,EAAH,CAAM,OAAN,EAAe,MAAM;AACjBC,EAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACH,CAFD;AAIAJ,EAAE,CAACK,IAAH,CAAQ,MAAR,EAAgB,MAAM;AAClBF,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACH,CAFD",
      "sourceRoot": "C:\\Users\\SalaA\\OneDrive\\Documents\\GitHub\\iTalk\\backend\\src\\Database\\",
      "sourcesContent": [
        "import mongoose from \"mongoose\";\n\nmongoose.set('useNewUrlParser', true);\nmongoose.set('useFindAndModify', false);\nmongoose.set('useCreateIndex', true);\nmongoose.set('useUnifiedTopology', true);\n\nmongoose.connect(\"mongodb://localhost:27017/iTalk\", {\n  useNewUrlParser: true,\n  useUnifiedTopology: true,\n});\n\nconst db = mongoose.connection;\n\ndb.on('error', () => {\n    console.log(\"Error on connection\");\n});\n\ndb.once('open', () => {   \n    console.log(\"Connected\")\n});"
      ]
    },
    "sourceType": "script",
    "mtime": 1630355239000
  },
  "{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\SalaA\\\\OneDrive\\\\Documents\\\\GitHub\\\\iTalk\\\\backend\\\\src\\\\Routes\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\SalaA\\\\OneDrive\\\\Documents\\\\GitHub\\\\iTalk\\\\backend\",\"filename\":\"C:\\\\Users\\\\SalaA\\\\OneDrive\\\\Documents\\\\GitHub\\\\iTalk\\\\backend\\\\src\\\\Routes\\\\Users.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\SalaA\\\\OneDrive\\\\Documents\\\\GitHub\\\\iTalk\\\\backend\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"inject-polyfills\",\"visitor\":{\"MemberExpression\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":{},\"_verified\":{},\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"SpreadElement\":{\"enter\":[null]},\"YieldExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"method\":\"usage-global\",\"version\":\"3.6.5\",\"targets\":{\"chrome\":\"67.0.0\",\"edge\":\"17.0.0\",\"firefox\":\"60.0.0\",\"safari\":\"11.1.0\"},\"include\":{},\"exclude\":{},\"proposals\":false,\"shippedProposals\":false,\"debug\":false}},{\"key\":\"preset-env/replace-babel-polyfill\",\"visitor\":{\"ImportDeclaration\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"usage\":true,\"deprecated\":true}}],\"presets\":[]}:7.15.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "C:\\Users\\SalaA\\OneDrive\\Documents\\GitHub\\iTalk\\backend\\src\\Routes\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\SalaA\\OneDrive\\Documents\\GitHub\\iTalk\\backend",
      "filename": "C:\\Users\\SalaA\\OneDrive\\Documents\\GitHub\\iTalk\\backend\\src\\Routes\\Users.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "C:\\Users\\SalaA\\OneDrive\\Documents\\GitHub\\iTalk\\backend",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "BinaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "inject-polyfills",
          "visitor": {
            "MemberExpression": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": {},
            "_verified": {},
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "SpreadElement": {
              "enter": [
                null
              ]
            },
            "YieldExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "method": "usage-global",
            "version": "3.6.5",
            "targets": {
              "chrome": "67.0.0",
              "edge": "17.0.0",
              "firefox": "60.0.0",
              "safari": "11.1.0"
            },
            "include": {},
            "exclude": {},
            "proposals": false,
            "shippedProposals": false,
            "debug": false
          }
        },
        {
          "key": "preset-env/replace-babel-polyfill",
          "visitor": {
            "ImportDeclaration": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "usage": true,
            "deprecated": true
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\SalaA\\OneDrive\\Documents\\GitHub\\iTalk\\backend\\src\\Routes\\Users.js",
        "plugins": [
          "privateIn",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\SalaA\\OneDrive\\Documents\\GitHub\\iTalk\\backend\\src\\Routes\\Users.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\SalaA\\OneDrive\\Documents\\GitHub\\iTalk\\backend\\src\\Routes\\",
        "sourceFileName": "Users.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = require(\"express\");\n\nvar _Users = _interopRequireDefault(require(\"../Database/Controllers/Users\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst UsersRouter = (0, _express.Router)();\n/*\n    Route \"/\":\n    1. Get: Login, Information\n    2. Post: Create User\n    3. Put: Update User Data\n    4. posDelete: Delete User\n*/\n\nUsersRouter.get(\"/\", (Request, Response) => {\n  _Users.default.Login(Request.query, Response);\n}).get(\"/Data\", (Request, Response) => {\n  _Users.default.UserData(Request.query, Response);\n}).get(\"/Search\", (Request, Response) => {\n  _Users.default.Search(Request.query, Response);\n}).post(\"/\", (Request, Response) => {\n  _Users.default.Create(Request.body, Response);\n}).post(\"/Forgot\", (Request, Response) => {\n  _Users.default.ForgotPass(Request, Response);\n}).put(\"/Reset\", (Request, Response) => {\n  _Users.default.ResetPass(Request.body, Response);\n}).put(\"/Reset/Cancel\", (Request, Response) => {\n  _Users.default.CancelResetPass(Request.body, Response);\n});\nmodule.exports = UsersRouter;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlVzZXJzLmpzIl0sIm5hbWVzIjpbIlVzZXJzUm91dGVyIiwiZ2V0IiwiUmVxdWVzdCIsIlJlc3BvbnNlIiwiVXNlcnMiLCJMb2dpbiIsInF1ZXJ5IiwiVXNlckRhdGEiLCJTZWFyY2giLCJwb3N0IiwiQ3JlYXRlIiwiYm9keSIsIkZvcmdvdFBhc3MiLCJwdXQiLCJSZXNldFBhc3MiLCJDYW5jZWxSZXNldFBhc3MiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQUFBOztBQUNBOzs7O0FBRUEsTUFBTUEsV0FBVyxHQUFHLHNCQUFwQjtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBQSxXQUFXLENBQUNDLEdBQVosQ0FBZ0IsR0FBaEIsRUFBcUIsQ0FBQ0MsT0FBRCxFQUFVQyxRQUFWLEtBQXVCO0FBQzVCQyxpQkFBTUMsS0FBTixDQUFZSCxPQUFPLENBQUNJLEtBQXBCLEVBQTJCSCxRQUEzQjtBQUNILENBRmIsRUFHYUYsR0FIYixDQUdpQixPQUhqQixFQUcwQixDQUFDQyxPQUFELEVBQVVDLFFBQVYsS0FBdUI7QUFDakNDLGlCQUFNRyxRQUFOLENBQWVMLE9BQU8sQ0FBQ0ksS0FBdkIsRUFBOEJILFFBQTlCO0FBQ0gsQ0FMYixFQU1hRixHQU5iLENBTWlCLFNBTmpCLEVBTTRCLENBQUNDLE9BQUQsRUFBVUMsUUFBVixLQUF1QjtBQUNuQ0MsaUJBQU1JLE1BQU4sQ0FBYU4sT0FBTyxDQUFDSSxLQUFyQixFQUE0QkgsUUFBNUI7QUFDSCxDQVJiLEVBU2FNLElBVGIsQ0FTa0IsR0FUbEIsRUFTdUIsQ0FBQ1AsT0FBRCxFQUFVQyxRQUFWLEtBQXVCO0FBQzlCQyxpQkFBTU0sTUFBTixDQUFhUixPQUFPLENBQUNTLElBQXJCLEVBQTJCUixRQUEzQjtBQUNILENBWGIsRUFZYU0sSUFaYixDQVlrQixTQVpsQixFQVk2QixDQUFDUCxPQUFELEVBQVVDLFFBQVYsS0FBdUI7QUFDcENDLGlCQUFNUSxVQUFOLENBQWlCVixPQUFqQixFQUEwQkMsUUFBMUI7QUFDSCxDQWRiLEVBZWFVLEdBZmIsQ0FlaUIsUUFmakIsRUFlMkIsQ0FBQ1gsT0FBRCxFQUFVQyxRQUFWLEtBQXVCO0FBQ2xDQyxpQkFBTVUsU0FBTixDQUFnQlosT0FBTyxDQUFDUyxJQUF4QixFQUE4QlIsUUFBOUI7QUFDSCxDQWpCYixFQWtCYVUsR0FsQmIsQ0FrQmlCLGVBbEJqQixFQWtCa0MsQ0FBQ1gsT0FBRCxFQUFVQyxRQUFWLEtBQXVCO0FBQ3pDQyxpQkFBTVcsZUFBTixDQUFzQmIsT0FBTyxDQUFDUyxJQUE5QixFQUFvQ1IsUUFBcEM7QUFDSCxDQXBCYjtBQXNCQWEsTUFBTSxDQUFDQyxPQUFQLEdBQWlCakIsV0FBakIiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxTYWxhQVxcT25lRHJpdmVcXERvY3VtZW50c1xcR2l0SHViXFxpVGFsa1xcYmFja2VuZFxcc3JjXFxSb3V0ZXNcXCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFJvdXRlciB9IGZyb20gXCJleHByZXNzXCI7XG5pbXBvcnQgVXNlcnMgZnJvbSBcIi4uL0RhdGFiYXNlL0NvbnRyb2xsZXJzL1VzZXJzXCI7XG5cbmNvbnN0IFVzZXJzUm91dGVyID0gUm91dGVyKCk7XG5cbi8qXG4gICAgUm91dGUgXCIvXCI6XG4gICAgMS4gR2V0OiBMb2dpbiwgSW5mb3JtYXRpb25cbiAgICAyLiBQb3N0OiBDcmVhdGUgVXNlclxuICAgIDMuIFB1dDogVXBkYXRlIFVzZXIgRGF0YVxuICAgIDQuIHBvc0RlbGV0ZTogRGVsZXRlIFVzZXJcbiovXG5cblVzZXJzUm91dGVyLmdldChcIi9cIiwgKFJlcXVlc3QsIFJlc3BvbnNlKSA9PiB7XG4gICAgICAgICAgICAgICAgVXNlcnMuTG9naW4oUmVxdWVzdC5xdWVyeSwgUmVzcG9uc2UpO1xuICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIC5nZXQoXCIvRGF0YVwiLCAoUmVxdWVzdCwgUmVzcG9uc2UpID0+IHtcbiAgICAgICAgICAgICAgICBVc2Vycy5Vc2VyRGF0YShSZXF1ZXN0LnF1ZXJ5LCBSZXNwb25zZSk7XG4gICAgICAgICAgICB9KVxuICAgICAgICAgICAgLmdldChcIi9TZWFyY2hcIiwgKFJlcXVlc3QsIFJlc3BvbnNlKSA9PiB7XG4gICAgICAgICAgICAgICAgVXNlcnMuU2VhcmNoKFJlcXVlc3QucXVlcnksIFJlc3BvbnNlKTtcbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAucG9zdChcIi9cIiwgKFJlcXVlc3QsIFJlc3BvbnNlKSA9PiB7XG4gICAgICAgICAgICAgICAgVXNlcnMuQ3JlYXRlKFJlcXVlc3QuYm9keSwgUmVzcG9uc2UpO1xuICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIC5wb3N0KFwiL0ZvcmdvdFwiLCAoUmVxdWVzdCwgUmVzcG9uc2UpID0+IHtcbiAgICAgICAgICAgICAgICBVc2Vycy5Gb3Jnb3RQYXNzKFJlcXVlc3QsIFJlc3BvbnNlKTtcbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAucHV0KFwiL1Jlc2V0XCIsIChSZXF1ZXN0LCBSZXNwb25zZSkgPT4ge1xuICAgICAgICAgICAgICAgIFVzZXJzLlJlc2V0UGFzcyhSZXF1ZXN0LmJvZHksIFJlc3BvbnNlKTtcbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAucHV0KFwiL1Jlc2V0L0NhbmNlbFwiLCAoUmVxdWVzdCwgUmVzcG9uc2UpID0+IHtcbiAgICAgICAgICAgICAgICBVc2Vycy5DYW5jZWxSZXNldFBhc3MoUmVxdWVzdC5ib2R5LCBSZXNwb25zZSk7XG4gICAgICAgICAgICB9KTtcblxubW9kdWxlLmV4cG9ydHMgPSBVc2Vyc1JvdXRlcjsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "Users.js"
      ],
      "names": [
        "UsersRouter",
        "get",
        "Request",
        "Response",
        "Users",
        "Login",
        "query",
        "UserData",
        "Search",
        "post",
        "Create",
        "body",
        "ForgotPass",
        "put",
        "ResetPass",
        "CancelResetPass",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA;;AACA;;;;AAEA,MAAMA,WAAW,GAAG,sBAApB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAA,WAAW,CAACC,GAAZ,CAAgB,GAAhB,EAAqB,CAACC,OAAD,EAAUC,QAAV,KAAuB;AAC5BC,iBAAMC,KAAN,CAAYH,OAAO,CAACI,KAApB,EAA2BH,QAA3B;AACH,CAFb,EAGaF,GAHb,CAGiB,OAHjB,EAG0B,CAACC,OAAD,EAAUC,QAAV,KAAuB;AACjCC,iBAAMG,QAAN,CAAeL,OAAO,CAACI,KAAvB,EAA8BH,QAA9B;AACH,CALb,EAMaF,GANb,CAMiB,SANjB,EAM4B,CAACC,OAAD,EAAUC,QAAV,KAAuB;AACnCC,iBAAMI,MAAN,CAAaN,OAAO,CAACI,KAArB,EAA4BH,QAA5B;AACH,CARb,EASaM,IATb,CASkB,GATlB,EASuB,CAACP,OAAD,EAAUC,QAAV,KAAuB;AAC9BC,iBAAMM,MAAN,CAAaR,OAAO,CAACS,IAArB,EAA2BR,QAA3B;AACH,CAXb,EAYaM,IAZb,CAYkB,SAZlB,EAY6B,CAACP,OAAD,EAAUC,QAAV,KAAuB;AACpCC,iBAAMQ,UAAN,CAAiBV,OAAjB,EAA0BC,QAA1B;AACH,CAdb,EAeaU,GAfb,CAeiB,QAfjB,EAe2B,CAACX,OAAD,EAAUC,QAAV,KAAuB;AAClCC,iBAAMU,SAAN,CAAgBZ,OAAO,CAACS,IAAxB,EAA8BR,QAA9B;AACH,CAjBb,EAkBaU,GAlBb,CAkBiB,eAlBjB,EAkBkC,CAACX,OAAD,EAAUC,QAAV,KAAuB;AACzCC,iBAAMW,eAAN,CAAsBb,OAAO,CAACS,IAA9B,EAAoCR,QAApC;AACH,CApBb;AAsBAa,MAAM,CAACC,OAAP,GAAiBjB,WAAjB",
      "sourceRoot": "C:\\Users\\SalaA\\OneDrive\\Documents\\GitHub\\iTalk\\backend\\src\\Routes\\",
      "sourcesContent": [
        "import { Router } from \"express\";\nimport Users from \"../Database/Controllers/Users\";\n\nconst UsersRouter = Router();\n\n/*\n    Route \"/\":\n    1. Get: Login, Information\n    2. Post: Create User\n    3. Put: Update User Data\n    4. posDelete: Delete User\n*/\n\nUsersRouter.get(\"/\", (Request, Response) => {\n                Users.Login(Request.query, Response);\n            })\n            .get(\"/Data\", (Request, Response) => {\n                Users.UserData(Request.query, Response);\n            })\n            .get(\"/Search\", (Request, Response) => {\n                Users.Search(Request.query, Response);\n            })\n            .post(\"/\", (Request, Response) => {\n                Users.Create(Request.body, Response);\n            })\n            .post(\"/Forgot\", (Request, Response) => {\n                Users.ForgotPass(Request, Response);\n            })\n            .put(\"/Reset\", (Request, Response) => {\n                Users.ResetPass(Request.body, Response);\n            })\n            .put(\"/Reset/Cancel\", (Request, Response) => {\n                Users.CancelResetPass(Request.body, Response);\n            });\n\nmodule.exports = UsersRouter;"
      ]
    },
    "sourceType": "script",
    "mtime": 1637613561415
  },
  "{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\SalaA\\\\OneDrive\\\\Documents\\\\GitHub\\\\iTalk\\\\backend\\\\src\\\\Database\\\\Controllers\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\SalaA\\\\OneDrive\\\\Documents\\\\GitHub\\\\iTalk\\\\backend\",\"filename\":\"C:\\\\Users\\\\SalaA\\\\OneDrive\\\\Documents\\\\GitHub\\\\iTalk\\\\backend\\\\src\\\\Database\\\\Controllers\\\\Users.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\SalaA\\\\OneDrive\\\\Documents\\\\GitHub\\\\iTalk\\\\backend\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"inject-polyfills\",\"visitor\":{\"MemberExpression\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":{},\"_verified\":{},\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"SpreadElement\":{\"enter\":[null]},\"YieldExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"method\":\"usage-global\",\"version\":\"3.6.5\",\"targets\":{\"chrome\":\"67.0.0\",\"edge\":\"17.0.0\",\"firefox\":\"60.0.0\",\"safari\":\"11.1.0\"},\"include\":{},\"exclude\":{},\"proposals\":false,\"shippedProposals\":false,\"debug\":false}},{\"key\":\"preset-env/replace-babel-polyfill\",\"visitor\":{\"ImportDeclaration\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"usage\":true,\"deprecated\":true}}],\"presets\":[]}:7.15.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "C:\\Users\\SalaA\\OneDrive\\Documents\\GitHub\\iTalk\\backend\\src\\Database\\Controllers\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\SalaA\\OneDrive\\Documents\\GitHub\\iTalk\\backend",
      "filename": "C:\\Users\\SalaA\\OneDrive\\Documents\\GitHub\\iTalk\\backend\\src\\Database\\Controllers\\Users.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "C:\\Users\\SalaA\\OneDrive\\Documents\\GitHub\\iTalk\\backend",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "BinaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "inject-polyfills",
          "visitor": {
            "MemberExpression": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": {},
            "_verified": {},
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "SpreadElement": {
              "enter": [
                null
              ]
            },
            "YieldExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "method": "usage-global",
            "version": "3.6.5",
            "targets": {
              "chrome": "67.0.0",
              "edge": "17.0.0",
              "firefox": "60.0.0",
              "safari": "11.1.0"
            },
            "include": {},
            "exclude": {},
            "proposals": false,
            "shippedProposals": false,
            "debug": false
          }
        },
        {
          "key": "preset-env/replace-babel-polyfill",
          "visitor": {
            "ImportDeclaration": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "usage": true,
            "deprecated": true
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\SalaA\\OneDrive\\Documents\\GitHub\\iTalk\\backend\\src\\Database\\Controllers\\Users.js",
        "plugins": [
          "privateIn",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\SalaA\\OneDrive\\Documents\\GitHub\\iTalk\\backend\\src\\Database\\Controllers\\Users.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\SalaA\\OneDrive\\Documents\\GitHub\\iTalk\\backend\\src\\Database\\Controllers\\",
        "sourceFileName": "Users.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nrequire(\"core-js/modules/es.promise.js\");\n\nrequire(\"core-js/modules/es.string.includes.js\");\n\nrequire(\"core-js/modules/es.regexp.constructor.js\");\n\nrequire(\"core-js/modules/es.regexp.exec.js\");\n\nrequire(\"core-js/modules/es.regexp.to-string.js\");\n\nrequire(\"core-js/modules/es.array.sort.js\");\n\nrequire(\"core-js/modules/es.string.starts-with.js\");\n\nrequire(\"core-js/modules/web.dom-collections.iterator.js\");\n\nvar _Users = _interopRequireDefault(require(\"../Models/Users\"));\n\nvar _UsersRecover = _interopRequireDefault(require(\"../Models/UsersRecover\"));\n\nvar _nodemailer = _interopRequireDefault(require(\"nodemailer\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst Create = async (Data, UserResponse) => {\n  console.log(Data);\n  await _Users.default.create({\n    Name: Data.Name,\n    Lastname: Data.Lastname,\n    Email: Data.Email.toUpperCase(),\n    Password: Data.Password,\n    Gender: Data.Gender,\n    Online: false,\n    ProfileImage: Data.Gender === \"Female\" ? //#region Base64 default images\n    \"\" : \"\" //#endregion Base64 default images\n\n  }, Error => {\n    UserResponse.send(Error ? \"Error: \".concat(Error.message.includes(\"dup key: { Email:\") ? \"Duplicated Email\" : \"Check Connection\") : \"Created\");\n  });\n};\n\nconst Search = async (Data, UserResponse) => {\n  let FirstSearchRegex = new RegExp(\"^\".concat(Data.Search), \"i\");\n  let SecondSearchRegex = new RegExp(\"\".concat(Data.Search), \"i\");\n  await _Users.default.find({\n    $and: [{\n      _id: {\n        $ne: Data.UserID\n      }\n    }, {\n      $or: [{\n        Name: FirstSearchRegex\n      }, {\n        Lastname: FirstSearchRegex\n      }, {\n        Name: SecondSearchRegex\n      }, {\n        Lastname: SecondSearchRegex\n      }]\n    }]\n  }, \"_id Name Lastname ProfileImage Online\", async (Error, Users) => {\n    let NameFilter = Users.filter(User => {\n      return User.Name.startsWith(Data.Search);\n    }).sort((a, b) => {\n      return a.Name < b.Name ? -1 : 1;\n    });\n    let LastNameFilter = Users.filter(User => {\n      return User.Lastname.startsWith(Data.Search) && !User.Name.startsWith(Data.Search);\n    }).sort((a, b) => {\n      return a.Lastname < b.Lastname ? -1 : 1;\n    });\n    let ContainFilter = Users.filter(User => {\n      return !User.Name.startsWith(Data.Search) && !User.Lastname.startsWith(Data.Search);\n    }).sort();\n    UserResponse.json(Error ? \"Error: \".concat(Error.message) : [...NameFilter, ...LastNameFilter, ...ContainFilter]);\n  });\n};\n\nconst Login = async (Data, UserResponse) => {\n  await _Users.default.findOne({\n    Email: Data.Email.toUpperCase(),\n    Password: Data.Password\n  }, (Error, User) => {\n    UserResponse.send(Error ? \"Error: \".concat(Error) : User === null ? \"Invalid\" : User._id);\n  });\n};\n\nconst UpdateOnline = async Data => {\n  await _Users.default.findOneAndUpdate({\n    \"_id\": Data.ID\n  }, {\n    $set: {\n      \"Online\": Data.Online\n    }\n  }, Error => {\n    /* UserResponse.send(Error ? `Error: ${Error.message}` : \"Updated\"); */\n  });\n};\n\nconst UserData = async (Data, UserResponse) => {\n  await _Users.default.findById(Data.ID, \"Name Lastname ProfileImage\", (Error, User) => {\n    UserResponse.send(Error ? \"Error: \".concat(Error.message) : User);\n  });\n};\n\nconst ForgotPass = async (Data, UserResponse) => {\n  await _Users.default.findOne({\n    Email: Data.body.Email.toUpperCase()\n  }, (Error, User) => {\n    if (!Error) {\n      if (User !== null) {\n        _UsersRecover.default.create({\n          UserID: User._id\n        }, async (Error, RecoverData) => {\n          if (!Error) {\n            let EmailTitle, EmailDescription, EmailChange, EmailCancel, HereText;\n\n            switch (Data.body.Language) {\n              case \"es\":\n                EmailTitle = \"Recupera Tu Contraseña\";\n                EmailDescription = \"Se ha solicitado un cambio de contraseña\";\n                EmailChange = \"Si fue usted quien solicito un cambio de contraseña presione\";\n                EmailCancel = \"Si usted no solicito un cambio de contraseña presione\";\n                HereText = \"aquí\";\n                break;\n\n              case \"fr\":\n                EmailTitle = \"Récupérez votre mot de passe\";\n                EmailDescription = \"Un changement de mot de passe a été demandé\";\n                EmailChange = \"Si c'est vous qui avez demandé un changement de mot de passe, cliquez\";\n                EmailCancel = \"Si vous n'avez pas demandé de changement de mot de passe, cliquez\";\n                HereText = \"ici\";\n                break;\n\n              default:\n                EmailTitle = \"Recover Your Password\";\n                EmailDescription = \"A password change has been requested\";\n                EmailChange = \"If you requested a password change press\";\n                EmailCancel = \"If you don't request a password change press\";\n                HereText = \"here\";\n                break;\n            }\n\n            let transporter = await _nodemailer.default.createTransport({\n              host: \"smtp.gmail.com\",\n              port: 587,\n              secure: false,\n              // true for 465, false for other ports\n              auth: {\n                user: \"iTalkSecure@gmail.com\",\n                // generated ethereal user\n                pass: \"26ax02st\" // generated ethereal password\n\n              }\n            });\n            let info = await transporter.sendMail({\n              from: '\"iTalk Security\" <iTalkSecure@gmail.com>',\n              to: Data.body.Email,\n              subject: EmailTitle,\n              text: \"\",\n              html: \"<html>\\n                      <body>\\n                        <p style=\\\"margin-left: 75px;\\\">\\n                          <img src=\\\"cid:iTalkLogo\\\" width=\\\"200\\\"/>\\n                        </p>\\n                        \\n                        <p style=\\\"font-size: 23px; font-weight: bold; margin-left: 75px; margin-bottom: 25px\\\">\".concat(EmailDescription, \"</p>\\n                        \\n                        <p style=\\\"font-size: 17px; margin-left: 75px;\\\">\\n                          \").concat(EmailChange, \" <a href=\\\"\").concat(Data.headers.origin, \"/Reset/\").concat(RecoverData._id, \"\\\">\").concat(HereText, \"</a>\\n                        </p>\\n                        \\n                        <p style=\\\"font-size: 17px; margin-left: 75px;\\\">\\n                          \").concat(EmailCancel, \" <a href=\\\"\").concat(Data.headers.origin, \"/Reset/\").concat(RecoverData._id, \"?ccl=s\\\">\").concat(HereText, \"</a>\\n                        </p>\\n                      </body>\\n                     </html>\\n                    \"),\n              attachments: [{\n                content: Buffer.from( //#region iTalk Logo\n                \"iVBORw0KGgoAAAANSUhEUgAAB9AAAAUUCAYAAACH3onyAAAAAXNSR0IArs4c6QAAAAlwSFlzAAAOxAAADsQBlSsOGwAABGNpVFh0WE1MOmNvbS5hZG9iZS54bXAAAAAAADw/eHBhY2tldCBiZWdpbj0n77u/JyBpZD0nVzVNME1wQ2VoaUh6cmVTek5UY3prYzlkJz8+Cjx4OnhtcG1ldGEgeG1sbnM6eD0nYWRvYmU6bnM6bWV0YS8nPgo8cmRmOlJERiB4bWxuczpyZGY9J2h0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMnPgoKIDxyZGY6RGVzY3JpcHRpb24gcmRmOmFib3V0PScnCiAgeG1sbnM6QXR0cmliPSdodHRwOi8vbnMuYXR0cmlidXRpb24uY29tL2Fkcy8xLjAvJz4KICA8QXR0cmliOkFkcz4KICAgPHJkZjpTZXE+CiAgICA8cmRmOmxpIHJkZjpwYXJzZVR5cGU9J1Jlc291cmNlJz4KICAgICA8QXR0cmliOkNyZWF0ZWQ+MjAyMS0wOC0xNjwvQXR0cmliOkNyZWF0ZWQ+CiAgICAgPEF0dHJpYjpFeHRJZD40NDBmN2NmOC03MzM2LTRhYTAtOTVhNi0yYzEwNGQzNDM3ZWI8L0F0dHJpYjpFeHRJZD4KICAgICA8QXR0cmliOkZiSWQ+NTI1MjY1OTE0MTc5NTgwPC9BdHRyaWI6RmJJZD4KICAgICA8QXR0cmliOlRvdWNoVHlwZT4yPC9BdHRyaWI6VG91Y2hUeXBlPgogICAgPC9yZGY6bGk+CiAgIDwvcmRmOlNlcT4KICA8L0F0dHJpYjpBZHM+CiA8L3JkZjpEZXNjcmlwdGlvbj4KCiA8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0nJwogIHhtbG5zOmRjPSdodHRwOi8vcHVybC5vcmcvZGMvZWxlbWVudHMvMS4xLyc+CiAgPGRjOnRpdGxlPgogICA8cmRmOkFsdD4KICAgIDxyZGY6bGkgeG1sOmxhbmc9J3gtZGVmYXVsdCc+bG92ZTwvcmRmOmxpPgogICA8L3JkZjpBbHQ+CiAgPC9kYzp0aXRsZT4KIDwvcmRmOkRlc2NyaXB0aW9uPgoKIDxyZGY6RGVzY3JpcHRpb24gcmRmOmFib3V0PScnCiAgeG1sbnM6cGRmPSdodHRwOi8vbnMuYWRvYmUuY29tL3BkZi8xLjMvJz4KICA8cGRmOkF1dGhvcj5NYXJjbyBQZXJlejwvcGRmOkF1dGhvcj4KIDwvcmRmOkRlc2NyaXB0aW9uPgoKIDxyZGY6RGVzY3JpcHRpb24gcmRmOmFib3V0PScnCiAgeG1sbnM6eG1wPSdodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvJz4KICA8eG1wOkNyZWF0b3JUb29sPkNhbnZhPC94bXA6Q3JlYXRvclRvb2w+CiA8L3JkZjpEZXNjcmlwdGlvbj4KPC9yZGY6UkRGPgo8L3g6eG1wbWV0YT4KPD94cGFja2V0IGVuZD0ncic/PhAj1SkAACAASURBVHic7N1pkBzneR/w5+3ZA7u4SJAAIQAkRIiXAJO0aN2+KFuOI8txrJRI27HjVMWOnapU2UnlqMSVhKtKXJUPqUqc2B+kOEfZLishHLssOZYd26Ksg6JEUSJFUzxF8QAvEMSN3cXuTL/5MDs7PTM9s7MASPH4/Vggdqe7336n58CHfz/PGwEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA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\" //#endregion iTalk Logo\n                , 'base64'),\n                cid: 'iTalkLogo'\n              }]\n            });\n            UserResponse.send(\"Email Sent\");\n          } else {\n            UserResponse.send(\"Error: \".concat(Error.message));\n          }\n        });\n      } else {\n        UserResponse.send(\"Error: User not found\");\n      }\n    } else {\n      UserResponse.send(\"Error: \".concat(Error.message));\n    }\n  });\n};\n\nconst ResetPass = async (Data, UserResponse) => {\n  await _UsersRecover.default.findOne({\n    \"_id\": Data.Token\n  }, (Error, Recover) => {\n    if (!Error) {\n      if (Recover !== null) {\n        if (Recover.Active) {\n          _Users.default.findOneAndUpdate({\n            _id: Recover.UserID\n          }, {\n            $set: {\n              Password: Data.Password\n            }\n          }, (Error, User) => {\n            if (!Error) {\n              if (User !== null) {\n                Recover.Active = false;\n                Recover.save();\n                UserResponse.send(\"Password Updated\");\n              } else {\n                UserResponse.send(\"User not found\");\n              }\n            } else {\n              UserResponse.send(\"Error: \".concat(Error));\n            }\n          });\n        } else {\n          UserResponse.send(\"Expired Token\");\n        }\n      } else {\n        UserResponse.send(\"Invalid Token\");\n      }\n    } else {\n      UserResponse.send(\"Error: \".concat(Error));\n    }\n  });\n};\n\nconst CancelResetPass = async (Data, UserResponse) => {\n  await _UsersRecover.default.findOneAndUpdate({\n    \"_id\": Data.id\n  }, {\n    $set: {\n      \"Active\": false\n    }\n  }, Error => {\n    UserResponse.send(Error ? \"Error: \".concat(Error.message) : \"Password Reset Cancelled\");\n  });\n};\n\nmodule.exports = {\n  Create,\n  UserData,\n  Search,\n  Login,\n  ForgotPass,\n  UpdateOnline,\n  ResetPass,\n  CancelResetPass\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "Users.js"
      ],
      "names": [
        "Create",
        "Data",
        "UserResponse",
        "console",
        "log",
        "UsersSchema",
        "create",
        "Name",
        "Lastname",
        "Email",
        "toUpperCase",
        "Password",
        "Gender",
        "Online",
        "ProfileImage",
        "Error",
        "send",
        "message",
        "includes",
        "Search",
        "FirstSearchRegex",
        "RegExp",
        "SecondSearchRegex",
        "find",
        "$and",
        "_id",
        "$ne",
        "UserID",
        "$or",
        "Users",
        "NameFilter",
        "filter",
        "User",
        "startsWith",
        "sort",
        "a",
        "b",
        "LastNameFilter",
        "ContainFilter",
        "json",
        "Login",
        "findOne",
        "UpdateOnline",
        "findOneAndUpdate",
        "ID",
        "$set",
        "UserData",
        "findById",
        "ForgotPass",
        "body",
        "UsersRecover",
        "RecoverData",
        "EmailTitle",
        "EmailDescription",
        "EmailChange",
        "EmailCancel",
        "HereText",
        "Language",
        "transporter",
        "NodeMailer",
        "createTransport",
        "host",
        "port",
        "secure",
        "auth",
        "user",
        "pass",
        "info",
        "sendMail",
        "from",
        "to",
        "subject",
        "text",
        "html",
        "headers",
        "origin",
        "attachments",
        "content",
        "Buffer",
        "cid",
        "ResetPass",
        "Token",
        "Recover",
        "Active",
        "save",
        "CancelResetPass",
        "id",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\SalaA\\OneDrive\\Documents\\GitHub\\iTalk\\backend\\src\\Database\\Controllers\\",
      "sourcesContent": [
        "import UsersSchema from \"../Models/Users\";\nimport UsersRecover from \"../Models/UsersRecover\";\nimport NodeMailer from \"nodemailer\";\n\nconst Create = async (Data, UserResponse) => {\n  console.log(Data);\n  await UsersSchema.create(\n    {\n      Name: Data.Name,\n      Lastname: Data.Lastname,\n      Email: Data.Email.toUpperCase(),\n      Password: Data.Password,\n      Gender: Data.Gender,\n      Online: false,\n      ProfileImage: Data.Gender === \"Female\" ? \n      //#region Base64 default images\n      \"\"\n      :\n      \"\"\n      //#endregion Base64 default images\n    },\n    (Error) => {\n      UserResponse.send(\n        Error ? `Error: ${Error.message.includes(\"dup key: { Email:\") ? \"Duplicated Email\" : \"Check Connection\"}` : `Created`\n      );\n    }\n  );\n};\n\nconst Search = async (Data, UserResponse) => {\n  let FirstSearchRegex = new RegExp(`^${Data.Search}`, \"i\");\n  let SecondSearchRegex = new RegExp(`${Data.Search}`, \"i\");\n\n  await UsersSchema.find({$and: [{_id: {$ne: Data.UserID}}, {$or: [{ Name: FirstSearchRegex }, { Lastname: FirstSearchRegex }, { Name: SecondSearchRegex }, { Lastname: SecondSearchRegex }]}]}, \"_id Name Lastname ProfileImage Online\", async (Error, Users) => {\n    \n    let NameFilter = Users.filter((User) => {\n      return User.Name.startsWith(Data.Search);\n    }).sort((a, b) => {\n      return a.Name < b.Name ? -1 : 1;\n    });\n\n    let LastNameFilter = Users.filter((User) => {\n      return User.Lastname.startsWith(Data.Search) && !User.Name.startsWith(Data.Search);\n    }).sort((a, b) => {\n      return a.Lastname < b.Lastname ? -1 : 1;\n    });\n\n    let ContainFilter = Users.filter((User) => {\n      return !User.Name.startsWith(Data.Search) && !User.Lastname.startsWith(Data.Search);\n    }).sort();\n\n    UserResponse.json(Error ? `Error: ${Error.message}` : [...NameFilter, ...LastNameFilter, ...ContainFilter]);\n  });\n};\n\nconst Login = async (Data, UserResponse) => {\n  await UsersSchema.findOne(\n    { Email: Data.Email.toUpperCase(), Password: Data.Password },\n    (Error, User) => {\n      UserResponse.send(\n        Error ? `Error: ${Error}` : User === null ? \"Invalid\" : User._id\n      );\n    }\n  );\n};\n\nconst UpdateOnline = async (Data) => {\n  await UsersSchema.findOneAndUpdate({\"_id\": Data.ID}, {$set: {\"Online\": Data.Online}}, (Error) => {\n    /* UserResponse.send(Error ? `Error: ${Error.message}` : \"Updated\"); */\n  })\n};\n\nconst UserData = async (Data, UserResponse) => {\n  await UsersSchema.findById(Data.ID, \"Name Lastname ProfileImage\", (Error, User) => {\n    UserResponse.send(Error ? `Error: ${Error.message}` : User);\n  });\n};\n\nconst ForgotPass = async (Data, UserResponse) => {\n  await UsersSchema.findOne({ Email: Data.body.Email.toUpperCase() }, (Error, User) => {\n    if(!Error){\n      if(User !== null){\n        UsersRecover.create({\n          UserID: User._id\n        }, async (Error, RecoverData) => {\n          if(!Error){\n            let EmailTitle, EmailDescription, EmailChange, EmailCancel, HereText; \n\n            switch(Data.body.Language){\n              case \"es\":\n                EmailTitle = \"Recupera Tu Contraseña\";\n                EmailDescription = \"Se ha solicitado un cambio de contraseña\";\n                EmailChange = \"Si fue usted quien solicito un cambio de contraseña presione\";\n                EmailCancel = \"Si usted no solicito un cambio de contraseña presione\";\n                HereText = \"aquí\";\n                break;\n              case \"fr\":\n                EmailTitle = \"Récupérez votre mot de passe\";\n                EmailDescription = \"Un changement de mot de passe a été demandé\";\n                EmailChange = \"Si c'est vous qui avez demandé un changement de mot de passe, cliquez\";\n                EmailCancel = \"Si vous n'avez pas demandé de changement de mot de passe, cliquez\";\n                HereText = \"ici\";\n                break;\n              default:\n                EmailTitle = \"Recover Your Password\";\n                EmailDescription = \"A password change has been requested\";\n                EmailChange = \"If you requested a password change press\";\n                EmailCancel = \"If you don't request a password change press\";\n                HereText = \"here\";\n                break;\n            }\n\n            let transporter = await NodeMailer.createTransport({\n              host: \"smtp.gmail.com\",\n              port: 587,\n              secure: false, // true for 465, false for other ports\n              auth: {\n                user: \"iTalkSecure@gmail.com\", // generated ethereal user\n                pass: \"26ax02st\", // generated ethereal password\n              },\n            }); \n\n            let info = await transporter.sendMail({\n              from: '\"iTalk Security\" <iTalkSecure@gmail.com>',\n              to: Data.body.Email,\n              subject: EmailTitle,\n              text: \"\",\n              html: `<html>\n                      <body>\n                        <p style=\"margin-left: 75px;\">\n                          <img src=\"cid:iTalkLogo\" width=\"200\"/>\n                        </p>\n                        \n                        <p style=\"font-size: 23px; font-weight: bold; margin-left: 75px; margin-bottom: 25px\">${EmailDescription}</p>\n                        \n                        <p style=\"font-size: 17px; margin-left: 75px;\">\n                          ${EmailChange} <a href=\"${Data.headers.origin}/Reset/${RecoverData._id}\">${HereText}</a>\n                        </p>\n                        \n                        <p style=\"font-size: 17px; margin-left: 75px;\">\n                          ${EmailCancel} <a href=\"${Data.headers.origin}/Reset/${RecoverData._id}?ccl=s\">${HereText}</a>\n                        </p>\n                      </body>\n                     </html>\n                    `,\n              attachments: [\n                {\n                  content: Buffer.from(\n                      //#region iTalk Logo\n                      \"\"\n                      //#endregion iTalk Logo\n                      ,\n                      'base64'\n                  ),\n                  cid: 'iTalkLogo',\n\n                }\n              ]\n            });\n\n            UserResponse.send(\"Email Sent\");  \n          }\n          else{\n            UserResponse.send(`Error: ${Error.message}`);  \n          }\n        });\n      }\n      else{\n        UserResponse.send(`Error: User not found`);  \n      }\n    }\n    else{\n      UserResponse.send(`Error: ${Error.message}`);\n    }\n  });\n};\n\nconst ResetPass = async (Data, UserResponse) => {\n    await UsersRecover.findOne({ \"_id\" : Data.Token }, (Error, Recover) => {\n      if(!Error){\n        if(Recover !== null){\n          if(Recover.Active){\n            UsersSchema.findOneAndUpdate({ _id: Recover.UserID }, { $set: { Password: Data.Password } }, (Error, User) => {\n              if(!Error){\n                if(User !== null){\n                  Recover.Active = false;\n                  Recover.save();\n  \n                  UserResponse.send(\"Password Updated\");\n                }\n                else{\n                  UserResponse.send(\"User not found\");  \n                }\n              }\n              else{\n                UserResponse.send(`Error: ${Error}`);\n              }            \n            });\n          }\n          else{\n            UserResponse.send(\"Expired Token\");\n          }\n        }\n        else{\n          UserResponse.send(\"Invalid Token\");\n        }\n      }\n      else{\n        UserResponse.send(`Error: ${Error}`);\n      }\n    });\n};\n\nconst CancelResetPass = async (Data, UserResponse) => {\n  await UsersRecover.findOneAndUpdate({\"_id\": Data.id}, {$set: {\"Active\": false}}, (Error) => {\n    UserResponse.send(Error ? `Error: ${Error.message}` : \"Password Reset Cancelled\");\n  });\n};\n\nmodule.exports = { Create, UserData, Search, Login, ForgotPass, UpdateOnline, ResetPass, CancelResetPass };"
      ]
    },
    "sourceType": "script",
    "mtime": 1637696961394
  },
  "{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\SalaA\\\\OneDrive\\\\Documents\\\\GitHub\\\\iTalk\\\\backend\\\\src\\\\Database\\\\Models\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\SalaA\\\\OneDrive\\\\Documents\\\\GitHub\\\\iTalk\\\\backend\",\"filename\":\"C:\\\\Users\\\\SalaA\\\\OneDrive\\\\Documents\\\\GitHub\\\\iTalk\\\\backend\\\\src\\\\Database\\\\Models\\\\Users.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\SalaA\\\\OneDrive\\\\Documents\\\\GitHub\\\\iTalk\\\\backend\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"inject-polyfills\",\"visitor\":{\"MemberExpression\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":{},\"_verified\":{},\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"SpreadElement\":{\"enter\":[null]},\"YieldExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"method\":\"usage-global\",\"version\":\"3.6.5\",\"targets\":{\"chrome\":\"67.0.0\",\"edge\":\"17.0.0\",\"firefox\":\"60.0.0\",\"safari\":\"11.1.0\"},\"include\":{},\"exclude\":{},\"proposals\":false,\"shippedProposals\":false,\"debug\":false}},{\"key\":\"preset-env/replace-babel-polyfill\",\"visitor\":{\"ImportDeclaration\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"usage\":true,\"deprecated\":true}}],\"presets\":[]}:7.15.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "C:\\Users\\SalaA\\OneDrive\\Documents\\GitHub\\iTalk\\backend\\src\\Database\\Models\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\SalaA\\OneDrive\\Documents\\GitHub\\iTalk\\backend",
      "filename": "C:\\Users\\SalaA\\OneDrive\\Documents\\GitHub\\iTalk\\backend\\src\\Database\\Models\\Users.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "C:\\Users\\SalaA\\OneDrive\\Documents\\GitHub\\iTalk\\backend",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "BinaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "inject-polyfills",
          "visitor": {
            "MemberExpression": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": {},
            "_verified": {},
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "SpreadElement": {
              "enter": [
                null
              ]
            },
            "YieldExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "method": "usage-global",
            "version": "3.6.5",
            "targets": {
              "chrome": "67.0.0",
              "edge": "17.0.0",
              "firefox": "60.0.0",
              "safari": "11.1.0"
            },
            "include": {},
            "exclude": {},
            "proposals": false,
            "shippedProposals": false,
            "debug": false
          }
        },
        {
          "key": "preset-env/replace-babel-polyfill",
          "visitor": {
            "ImportDeclaration": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "usage": true,
            "deprecated": true
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\SalaA\\OneDrive\\Documents\\GitHub\\iTalk\\backend\\src\\Database\\Models\\Users.js",
        "plugins": [
          "privateIn",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\SalaA\\OneDrive\\Documents\\GitHub\\iTalk\\backend\\src\\Database\\Models\\Users.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\SalaA\\OneDrive\\Documents\\GitHub\\iTalk\\backend\\src\\Database\\Models\\",
        "sourceFileName": "Users.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _mongoose = require(\"mongoose\");\n\nconst UsersModel = new _mongoose.Schema({\n  Name: {\n    type: String,\n    unique: false,\n    require: true\n  },\n  Lastname: {\n    type: String,\n    unique: false,\n    require: true\n  },\n  Email: {\n    type: String,\n    index: {\n      unique: true\n    },\n    require: true\n  },\n  Password: {\n    type: String,\n    unique: false,\n    require: true\n  },\n  Gender: {\n    type: String,\n    unique: false,\n    require: true\n  },\n  ProfileImage: {\n    type: String,\n    unique: false,\n    require: false\n  },\n  Online: {\n    type: Boolean,\n    unique: false,\n    require\n  },\n  Conversations: [String]\n});\nmodule.exports = (0, _mongoose.model)(\"Users\", UsersModel);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlVzZXJzLmpzIl0sIm5hbWVzIjpbIlVzZXJzTW9kZWwiLCJTY2hlbWEiLCJOYW1lIiwidHlwZSIsIlN0cmluZyIsInVuaXF1ZSIsInJlcXVpcmUiLCJMYXN0bmFtZSIsIkVtYWlsIiwiaW5kZXgiLCJQYXNzd29yZCIsIkdlbmRlciIsIlByb2ZpbGVJbWFnZSIsIk9ubGluZSIsIkJvb2xlYW4iLCJDb252ZXJzYXRpb25zIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7QUFFQSxNQUFNQSxVQUFVLEdBQUcsSUFBSUMsZ0JBQUosQ0FBVztBQUMxQkMsRUFBQUEsSUFBSSxFQUFFO0FBQUVDLElBQUFBLElBQUksRUFBRUMsTUFBUjtBQUFnQkMsSUFBQUEsTUFBTSxFQUFFLEtBQXhCO0FBQStCQyxJQUFBQSxPQUFPLEVBQUU7QUFBeEMsR0FEb0I7QUFFMUJDLEVBQUFBLFFBQVEsRUFBRTtBQUFFSixJQUFBQSxJQUFJLEVBQUVDLE1BQVI7QUFBZ0JDLElBQUFBLE1BQU0sRUFBRSxLQUF4QjtBQUErQkMsSUFBQUEsT0FBTyxFQUFFO0FBQXhDLEdBRmdCO0FBRzFCRSxFQUFBQSxLQUFLLEVBQUU7QUFBRUwsSUFBQUEsSUFBSSxFQUFFQyxNQUFSO0FBQWdCSyxJQUFBQSxLQUFLLEVBQUU7QUFBQ0osTUFBQUEsTUFBTSxFQUFFO0FBQVQsS0FBdkI7QUFBdUNDLElBQUFBLE9BQU8sRUFBRTtBQUFoRCxHQUhtQjtBQUkxQkksRUFBQUEsUUFBUSxFQUFFO0FBQUVQLElBQUFBLElBQUksRUFBRUMsTUFBUjtBQUFnQkMsSUFBQUEsTUFBTSxFQUFFLEtBQXhCO0FBQStCQyxJQUFBQSxPQUFPLEVBQUU7QUFBeEMsR0FKZ0I7QUFLMUJLLEVBQUFBLE1BQU0sRUFBRTtBQUFFUixJQUFBQSxJQUFJLEVBQUVDLE1BQVI7QUFBZ0JDLElBQUFBLE1BQU0sRUFBRSxLQUF4QjtBQUErQkMsSUFBQUEsT0FBTyxFQUFFO0FBQXhDLEdBTGtCO0FBTTFCTSxFQUFBQSxZQUFZLEVBQUU7QUFBRVQsSUFBQUEsSUFBSSxFQUFFQyxNQUFSO0FBQWdCQyxJQUFBQSxNQUFNLEVBQUUsS0FBeEI7QUFBK0JDLElBQUFBLE9BQU8sRUFBRTtBQUF4QyxHQU5ZO0FBTzFCTyxFQUFBQSxNQUFNLEVBQUU7QUFBRVYsSUFBQUEsSUFBSSxFQUFFVyxPQUFSO0FBQWlCVCxJQUFBQSxNQUFNLEVBQUUsS0FBekI7QUFBZ0NDLElBQUFBO0FBQWhDLEdBUGtCO0FBUTFCUyxFQUFBQSxhQUFhLEVBQUUsQ0FBQ1gsTUFBRDtBQVJXLENBQVgsQ0FBbkI7QUFXQVksTUFBTSxDQUFDQyxPQUFQLEdBQWlCLHFCQUFNLE9BQU4sRUFBZWpCLFVBQWYsQ0FBakIiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxTYWxhQVxcT25lRHJpdmVcXERvY3VtZW50c1xcR2l0SHViXFxpVGFsa1xcYmFja2VuZFxcc3JjXFxEYXRhYmFzZVxcTW9kZWxzXFwiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBTY2hlbWEsIG1vZGVsIH0gZnJvbSBcIm1vbmdvb3NlXCI7XG5cbmNvbnN0IFVzZXJzTW9kZWwgPSBuZXcgU2NoZW1hKHtcbiAgICBOYW1lOiB7IHR5cGU6IFN0cmluZywgdW5pcXVlOiBmYWxzZSwgcmVxdWlyZTogdHJ1ZSB9LFxuICAgIExhc3RuYW1lOiB7IHR5cGU6IFN0cmluZywgdW5pcXVlOiBmYWxzZSwgcmVxdWlyZTogdHJ1ZSB9LFxuICAgIEVtYWlsOiB7IHR5cGU6IFN0cmluZywgaW5kZXg6IHt1bmlxdWU6IHRydWV9LCByZXF1aXJlOiB0cnVlIH0sXG4gICAgUGFzc3dvcmQ6IHsgdHlwZTogU3RyaW5nLCB1bmlxdWU6IGZhbHNlLCByZXF1aXJlOiB0cnVlIH0sXG4gICAgR2VuZGVyOiB7IHR5cGU6IFN0cmluZywgdW5pcXVlOiBmYWxzZSwgcmVxdWlyZTogdHJ1ZSB9LFxuICAgIFByb2ZpbGVJbWFnZTogeyB0eXBlOiBTdHJpbmcsIHVuaXF1ZTogZmFsc2UsIHJlcXVpcmU6IGZhbHNlIH0sXG4gICAgT25saW5lOiB7IHR5cGU6IEJvb2xlYW4sIHVuaXF1ZTogZmFsc2UsIHJlcXVpcmUgfSxcbiAgICBDb252ZXJzYXRpb25zOiBbU3RyaW5nXVxufSk7XG5cbm1vZHVsZS5leHBvcnRzID0gbW9kZWwoXCJVc2Vyc1wiLCBVc2Vyc01vZGVsKTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "Users.js"
      ],
      "names": [
        "UsersModel",
        "Schema",
        "Name",
        "type",
        "String",
        "unique",
        "require",
        "Lastname",
        "Email",
        "index",
        "Password",
        "Gender",
        "ProfileImage",
        "Online",
        "Boolean",
        "Conversations",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA;;AAEA,MAAMA,UAAU,GAAG,IAAIC,gBAAJ,CAAW;AAC1BC,EAAAA,IAAI,EAAE;AAAEC,IAAAA,IAAI,EAAEC,MAAR;AAAgBC,IAAAA,MAAM,EAAE,KAAxB;AAA+BC,IAAAA,OAAO,EAAE;AAAxC,GADoB;AAE1BC,EAAAA,QAAQ,EAAE;AAAEJ,IAAAA,IAAI,EAAEC,MAAR;AAAgBC,IAAAA,MAAM,EAAE,KAAxB;AAA+BC,IAAAA,OAAO,EAAE;AAAxC,GAFgB;AAG1BE,EAAAA,KAAK,EAAE;AAAEL,IAAAA,IAAI,EAAEC,MAAR;AAAgBK,IAAAA,KAAK,EAAE;AAACJ,MAAAA,MAAM,EAAE;AAAT,KAAvB;AAAuCC,IAAAA,OAAO,EAAE;AAAhD,GAHmB;AAI1BI,EAAAA,QAAQ,EAAE;AAAEP,IAAAA,IAAI,EAAEC,MAAR;AAAgBC,IAAAA,MAAM,EAAE,KAAxB;AAA+BC,IAAAA,OAAO,EAAE;AAAxC,GAJgB;AAK1BK,EAAAA,MAAM,EAAE;AAAER,IAAAA,IAAI,EAAEC,MAAR;AAAgBC,IAAAA,MAAM,EAAE,KAAxB;AAA+BC,IAAAA,OAAO,EAAE;AAAxC,GALkB;AAM1BM,EAAAA,YAAY,EAAE;AAAET,IAAAA,IAAI,EAAEC,MAAR;AAAgBC,IAAAA,MAAM,EAAE,KAAxB;AAA+BC,IAAAA,OAAO,EAAE;AAAxC,GANY;AAO1BO,EAAAA,MAAM,EAAE;AAAEV,IAAAA,IAAI,EAAEW,OAAR;AAAiBT,IAAAA,MAAM,EAAE,KAAzB;AAAgCC,IAAAA;AAAhC,GAPkB;AAQ1BS,EAAAA,aAAa,EAAE,CAACX,MAAD;AARW,CAAX,CAAnB;AAWAY,MAAM,CAACC,OAAP,GAAiB,qBAAM,OAAN,EAAejB,UAAf,CAAjB",
      "sourceRoot": "C:\\Users\\SalaA\\OneDrive\\Documents\\GitHub\\iTalk\\backend\\src\\Database\\Models\\",
      "sourcesContent": [
        "import { Schema, model } from \"mongoose\";\n\nconst UsersModel = new Schema({\n    Name: { type: String, unique: false, require: true },\n    Lastname: { type: String, unique: false, require: true },\n    Email: { type: String, index: {unique: true}, require: true },\n    Password: { type: String, unique: false, require: true },\n    Gender: { type: String, unique: false, require: true },\n    ProfileImage: { type: String, unique: false, require: false },\n    Online: { type: Boolean, unique: false, require },\n    Conversations: [String]\n});\n\nmodule.exports = model(\"Users\", UsersModel);"
      ]
    },
    "sourceType": "script",
    "mtime": 1637612544854
  },
  "{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\SalaA\\\\OneDrive\\\\Documents\\\\GitHub\\\\iTalk\\\\backend\\\\src\\\\Database\\\\Models\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\SalaA\\\\OneDrive\\\\Documents\\\\GitHub\\\\iTalk\\\\backend\",\"filename\":\"C:\\\\Users\\\\SalaA\\\\OneDrive\\\\Documents\\\\GitHub\\\\iTalk\\\\backend\\\\src\\\\Database\\\\Models\\\\UsersRecover.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\SalaA\\\\OneDrive\\\\Documents\\\\GitHub\\\\iTalk\\\\backend\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"inject-polyfills\",\"visitor\":{\"MemberExpression\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":{},\"_verified\":{},\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"SpreadElement\":{\"enter\":[null]},\"YieldExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"method\":\"usage-global\",\"version\":\"3.6.5\",\"targets\":{\"chrome\":\"67.0.0\",\"edge\":\"17.0.0\",\"firefox\":\"60.0.0\",\"safari\":\"11.1.0\"},\"include\":{},\"exclude\":{},\"proposals\":false,\"shippedProposals\":false,\"debug\":false}},{\"key\":\"preset-env/replace-babel-polyfill\",\"visitor\":{\"ImportDeclaration\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"usage\":true,\"deprecated\":true}}],\"presets\":[]}:7.15.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "C:\\Users\\SalaA\\OneDrive\\Documents\\GitHub\\iTalk\\backend\\src\\Database\\Models\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\SalaA\\OneDrive\\Documents\\GitHub\\iTalk\\backend",
      "filename": "C:\\Users\\SalaA\\OneDrive\\Documents\\GitHub\\iTalk\\backend\\src\\Database\\Models\\UsersRecover.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "C:\\Users\\SalaA\\OneDrive\\Documents\\GitHub\\iTalk\\backend",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "BinaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "inject-polyfills",
          "visitor": {
            "MemberExpression": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": {},
            "_verified": {},
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "SpreadElement": {
              "enter": [
                null
              ]
            },
            "YieldExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "method": "usage-global",
            "version": "3.6.5",
            "targets": {
              "chrome": "67.0.0",
              "edge": "17.0.0",
              "firefox": "60.0.0",
              "safari": "11.1.0"
            },
            "include": {},
            "exclude": {},
            "proposals": false,
            "shippedProposals": false,
            "debug": false
          }
        },
        {
          "key": "preset-env/replace-babel-polyfill",
          "visitor": {
            "ImportDeclaration": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "usage": true,
            "deprecated": true
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\SalaA\\OneDrive\\Documents\\GitHub\\iTalk\\backend\\src\\Database\\Models\\UsersRecover.js",
        "plugins": [
          "privateIn",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\SalaA\\OneDrive\\Documents\\GitHub\\iTalk\\backend\\src\\Database\\Models\\UsersRecover.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\SalaA\\OneDrive\\Documents\\GitHub\\iTalk\\backend\\src\\Database\\Models\\",
        "sourceFileName": "UsersRecover.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _mongoose = require(\"mongoose\");\n\nconst UsersRecover = new _mongoose.Schema({\n  UserID: String,\n  RecoverDate: {\n    type: Date,\n    default: Date.now\n  },\n  Active: {\n    type: Boolean,\n    default: true\n  }\n});\nmodule.exports = (0, _mongoose.model)('UsersRecover', UsersRecover);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlVzZXJzUmVjb3Zlci5qcyJdLCJuYW1lcyI6WyJVc2Vyc1JlY292ZXIiLCJTY2hlbWEiLCJVc2VySUQiLCJTdHJpbmciLCJSZWNvdmVyRGF0ZSIsInR5cGUiLCJEYXRlIiwiZGVmYXVsdCIsIm5vdyIsIkFjdGl2ZSIsIkJvb2xlYW4iLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQUFBOztBQUVBLE1BQU1BLFlBQVksR0FBRyxJQUFJQyxnQkFBSixDQUFXO0FBQzVCQyxFQUFBQSxNQUFNLEVBQUVDLE1BRG9CO0FBRTVCQyxFQUFBQSxXQUFXLEVBQUU7QUFBRUMsSUFBQUEsSUFBSSxFQUFFQyxJQUFSO0FBQWNDLElBQUFBLE9BQU8sRUFBRUQsSUFBSSxDQUFDRTtBQUE1QixHQUZlO0FBRzVCQyxFQUFBQSxNQUFNLEVBQUU7QUFBRUosSUFBQUEsSUFBSSxFQUFFSyxPQUFSO0FBQWlCSCxJQUFBQSxPQUFPLEVBQUU7QUFBMUI7QUFIb0IsQ0FBWCxDQUFyQjtBQU1BSSxNQUFNLENBQUNDLE9BQVAsR0FBaUIscUJBQU0sY0FBTixFQUFzQlosWUFBdEIsQ0FBakIiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxTYWxhQVxcT25lRHJpdmVcXERvY3VtZW50c1xcR2l0SHViXFxpVGFsa1xcYmFja2VuZFxcc3JjXFxEYXRhYmFzZVxcTW9kZWxzXFwiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBTY2hlbWEsIG1vZGVsIH0gZnJvbSBcIm1vbmdvb3NlXCI7XG5cbmNvbnN0IFVzZXJzUmVjb3ZlciA9IG5ldyBTY2hlbWEoe1xuICAgIFVzZXJJRDogU3RyaW5nLFxuICAgIFJlY292ZXJEYXRlOiB7IHR5cGU6IERhdGUsIGRlZmF1bHQ6IERhdGUubm93IH0sXG4gICAgQWN0aXZlOiB7IHR5cGU6IEJvb2xlYW4sIGRlZmF1bHQ6IHRydWUgfSBcbn0pO1xuXG5tb2R1bGUuZXhwb3J0cyA9IG1vZGVsKCdVc2Vyc1JlY292ZXInLCBVc2Vyc1JlY292ZXIpOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "UsersRecover.js"
      ],
      "names": [
        "UsersRecover",
        "Schema",
        "UserID",
        "String",
        "RecoverDate",
        "type",
        "Date",
        "default",
        "now",
        "Active",
        "Boolean",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA;;AAEA,MAAMA,YAAY,GAAG,IAAIC,gBAAJ,CAAW;AAC5BC,EAAAA,MAAM,EAAEC,MADoB;AAE5BC,EAAAA,WAAW,EAAE;AAAEC,IAAAA,IAAI,EAAEC,IAAR;AAAcC,IAAAA,OAAO,EAAED,IAAI,CAACE;AAA5B,GAFe;AAG5BC,EAAAA,MAAM,EAAE;AAAEJ,IAAAA,IAAI,EAAEK,OAAR;AAAiBH,IAAAA,OAAO,EAAE;AAA1B;AAHoB,CAAX,CAArB;AAMAI,MAAM,CAACC,OAAP,GAAiB,qBAAM,cAAN,EAAsBZ,YAAtB,CAAjB",
      "sourceRoot": "C:\\Users\\SalaA\\OneDrive\\Documents\\GitHub\\iTalk\\backend\\src\\Database\\Models\\",
      "sourcesContent": [
        "import { Schema, model } from \"mongoose\";\n\nconst UsersRecover = new Schema({\n    UserID: String,\n    RecoverDate: { type: Date, default: Date.now },\n    Active: { type: Boolean, default: true } \n});\n\nmodule.exports = model('UsersRecover', UsersRecover);"
      ]
    },
    "sourceType": "script",
    "mtime": 1630355239000
  },
  "{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\SalaA\\\\OneDrive\\\\Documents\\\\GitHub\\\\iTalk\\\\backend\\\\src\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\SalaA\\\\OneDrive\\\\Documents\\\\GitHub\\\\iTalk\\\\backend\",\"filename\":\"C:\\\\Users\\\\SalaA\\\\OneDrive\\\\Documents\\\\GitHub\\\\iTalk\\\\backend\\\\src\\\\SocketIO.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\SalaA\\\\OneDrive\\\\Documents\\\\GitHub\\\\iTalk\\\\backend\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"inject-polyfills\",\"visitor\":{\"MemberExpression\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":{},\"_verified\":{},\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"SpreadElement\":{\"enter\":[null]},\"YieldExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"method\":\"usage-global\",\"version\":\"3.6.5\",\"targets\":{\"chrome\":\"67.0.0\",\"edge\":\"17.0.0\",\"firefox\":\"60.0.0\",\"safari\":\"11.1.0\"},\"include\":{},\"exclude\":{},\"proposals\":false,\"shippedProposals\":false,\"debug\":false}},{\"key\":\"preset-env/replace-babel-polyfill\",\"visitor\":{\"ImportDeclaration\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"usage\":true,\"deprecated\":true}}],\"presets\":[]}:7.15.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "C:\\Users\\SalaA\\OneDrive\\Documents\\GitHub\\iTalk\\backend\\src\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\SalaA\\OneDrive\\Documents\\GitHub\\iTalk\\backend",
      "filename": "C:\\Users\\SalaA\\OneDrive\\Documents\\GitHub\\iTalk\\backend\\src\\SocketIO.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "C:\\Users\\SalaA\\OneDrive\\Documents\\GitHub\\iTalk\\backend",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "BinaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "inject-polyfills",
          "visitor": {
            "MemberExpression": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": {},
            "_verified": {},
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "SpreadElement": {
              "enter": [
                null
              ]
            },
            "YieldExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "method": "usage-global",
            "version": "3.6.5",
            "targets": {
              "chrome": "67.0.0",
              "edge": "17.0.0",
              "firefox": "60.0.0",
              "safari": "11.1.0"
            },
            "include": {},
            "exclude": {},
            "proposals": false,
            "shippedProposals": false,
            "debug": false
          }
        },
        {
          "key": "preset-env/replace-babel-polyfill",
          "visitor": {
            "ImportDeclaration": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "usage": true,
            "deprecated": true
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\SalaA\\OneDrive\\Documents\\GitHub\\iTalk\\backend\\src\\SocketIO.js",
        "plugins": [
          "privateIn",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\SalaA\\OneDrive\\Documents\\GitHub\\iTalk\\backend\\src\\SocketIO.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\SalaA\\OneDrive\\Documents\\GitHub\\iTalk\\backend\\src\\",
        "sourceFileName": "SocketIO.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXFNhbGFBXFxPbmVEcml2ZVxcRG9jdW1lbnRzXFxHaXRIdWJcXGlUYWxrXFxiYWNrZW5kXFxzcmNcXCIsInNvdXJjZXNDb250ZW50IjpbXX0=",
    "map": {
      "version": 3,
      "sources": [],
      "names": [],
      "mappings": "",
      "sourceRoot": "C:\\Users\\SalaA\\OneDrive\\Documents\\GitHub\\iTalk\\backend\\src\\",
      "sourcesContent": []
    },
    "sourceType": "script",
    "mtime": 1637423956959
  },
  "{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\SalaA\\\\OneDrive\\\\Documents\\\\GitHub\\\\iTalk\\\\backend\\\\src\\\\Routes\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\SalaA\\\\OneDrive\\\\Documents\\\\GitHub\\\\iTalk\\\\backend\",\"filename\":\"C:\\\\Users\\\\SalaA\\\\OneDrive\\\\Documents\\\\GitHub\\\\iTalk\\\\backend\\\\src\\\\Routes\\\\Conversation.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\SalaA\\\\OneDrive\\\\Documents\\\\GitHub\\\\iTalk\\\\backend\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"inject-polyfills\",\"visitor\":{\"MemberExpression\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":{},\"_verified\":{},\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"SpreadElement\":{\"enter\":[null]},\"YieldExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"method\":\"usage-global\",\"version\":\"3.6.5\",\"targets\":{\"chrome\":\"67.0.0\",\"edge\":\"17.0.0\",\"firefox\":\"60.0.0\",\"safari\":\"11.1.0\"},\"include\":{},\"exclude\":{},\"proposals\":false,\"shippedProposals\":false,\"debug\":false}},{\"key\":\"preset-env/replace-babel-polyfill\",\"visitor\":{\"ImportDeclaration\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"usage\":true,\"deprecated\":true}}],\"presets\":[]}:7.15.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "C:\\Users\\SalaA\\OneDrive\\Documents\\GitHub\\iTalk\\backend\\src\\Routes\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\SalaA\\OneDrive\\Documents\\GitHub\\iTalk\\backend",
      "filename": "C:\\Users\\SalaA\\OneDrive\\Documents\\GitHub\\iTalk\\backend\\src\\Routes\\Conversation.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "C:\\Users\\SalaA\\OneDrive\\Documents\\GitHub\\iTalk\\backend",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "BinaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "inject-polyfills",
          "visitor": {
            "MemberExpression": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": {},
            "_verified": {},
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "SpreadElement": {
              "enter": [
                null
              ]
            },
            "YieldExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "method": "usage-global",
            "version": "3.6.5",
            "targets": {
              "chrome": "67.0.0",
              "edge": "17.0.0",
              "firefox": "60.0.0",
              "safari": "11.1.0"
            },
            "include": {},
            "exclude": {},
            "proposals": false,
            "shippedProposals": false,
            "debug": false
          }
        },
        {
          "key": "preset-env/replace-babel-polyfill",
          "visitor": {
            "ImportDeclaration": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "usage": true,
            "deprecated": true
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\SalaA\\OneDrive\\Documents\\GitHub\\iTalk\\backend\\src\\Routes\\Conversation.js",
        "plugins": [
          "privateIn",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\SalaA\\OneDrive\\Documents\\GitHub\\iTalk\\backend\\src\\Routes\\Conversation.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\SalaA\\OneDrive\\Documents\\GitHub\\iTalk\\backend\\src\\Routes\\",
        "sourceFileName": "Conversation.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = require(\"express\");\n\nvar _Conversation = _interopRequireDefault(require(\"../Database/Controllers/Conversation\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst ConversationRouter = (0, _express.Router)();\nConversationRouter.get(\"/\", (Request, Response) => {\n  _Conversation.default.Recieve(Request, Response);\n});\nmodule.exports = ConversationRouter;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkNvbnZlcnNhdGlvbi5qcyJdLCJuYW1lcyI6WyJDb252ZXJzYXRpb25Sb3V0ZXIiLCJnZXQiLCJSZXF1ZXN0IiwiUmVzcG9uc2UiLCJDb252ZXJzYXRpb25zIiwiUmVjaWV2ZSIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7O0FBQUE7O0FBQ0E7Ozs7QUFFQSxNQUFNQSxrQkFBa0IsR0FBRyxzQkFBM0I7QUFFQUEsa0JBQWtCLENBQUNDLEdBQW5CLENBQXVCLEdBQXZCLEVBQTRCLENBQUNDLE9BQUQsRUFBVUMsUUFBVixLQUF1QjtBQUMvQ0Msd0JBQWNDLE9BQWQsQ0FBc0JILE9BQXRCLEVBQStCQyxRQUEvQjtBQUNILENBRkQ7QUFJQUcsTUFBTSxDQUFDQyxPQUFQLEdBQWlCUCxrQkFBakIiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxTYWxhQVxcT25lRHJpdmVcXERvY3VtZW50c1xcR2l0SHViXFxpVGFsa1xcYmFja2VuZFxcc3JjXFxSb3V0ZXNcXCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFJvdXRlciB9IGZyb20gXCJleHByZXNzXCI7XHJcbmltcG9ydCBDb252ZXJzYXRpb25zIGZyb20gXCIuLi9EYXRhYmFzZS9Db250cm9sbGVycy9Db252ZXJzYXRpb25cIjtcclxuXHJcbmNvbnN0IENvbnZlcnNhdGlvblJvdXRlciA9IFJvdXRlcigpO1xyXG5cclxuQ29udmVyc2F0aW9uUm91dGVyLmdldChcIi9cIiwgKFJlcXVlc3QsIFJlc3BvbnNlKSA9PiB7XHJcbiAgICBDb252ZXJzYXRpb25zLlJlY2lldmUoUmVxdWVzdCwgUmVzcG9uc2UpO1xyXG59KTtcclxuXHJcbm1vZHVsZS5leHBvcnRzID0gQ29udmVyc2F0aW9uUm91dGVyOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "Conversation.js"
      ],
      "names": [
        "ConversationRouter",
        "get",
        "Request",
        "Response",
        "Conversations",
        "Recieve",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA;;AACA;;;;AAEA,MAAMA,kBAAkB,GAAG,sBAA3B;AAEAA,kBAAkB,CAACC,GAAnB,CAAuB,GAAvB,EAA4B,CAACC,OAAD,EAAUC,QAAV,KAAuB;AAC/CC,wBAAcC,OAAd,CAAsBH,OAAtB,EAA+BC,QAA/B;AACH,CAFD;AAIAG,MAAM,CAACC,OAAP,GAAiBP,kBAAjB",
      "sourceRoot": "C:\\Users\\SalaA\\OneDrive\\Documents\\GitHub\\iTalk\\backend\\src\\Routes\\",
      "sourcesContent": [
        "import { Router } from \"express\";\r\nimport Conversations from \"../Database/Controllers/Conversation\";\r\n\r\nconst ConversationRouter = Router();\r\n\r\nConversationRouter.get(\"/\", (Request, Response) => {\r\n    Conversations.Recieve(Request, Response);\r\n});\r\n\r\nmodule.exports = ConversationRouter;"
      ]
    },
    "sourceType": "script",
    "mtime": 1637700101543
  },
  "{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\SalaA\\\\OneDrive\\\\Documents\\\\GitHub\\\\iTalk\\\\backend\\\\src\\\\Database\\\\Controllers\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\SalaA\\\\OneDrive\\\\Documents\\\\GitHub\\\\iTalk\\\\backend\",\"filename\":\"C:\\\\Users\\\\SalaA\\\\OneDrive\\\\Documents\\\\GitHub\\\\iTalk\\\\backend\\\\src\\\\Database\\\\Controllers\\\\Conversation.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\SalaA\\\\OneDrive\\\\Documents\\\\GitHub\\\\iTalk\\\\backend\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"inject-polyfills\",\"visitor\":{\"MemberExpression\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":{},\"_verified\":{},\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"SpreadElement\":{\"enter\":[null]},\"YieldExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"method\":\"usage-global\",\"version\":\"3.6.5\",\"targets\":{\"chrome\":\"67.0.0\",\"edge\":\"17.0.0\",\"firefox\":\"60.0.0\",\"safari\":\"11.1.0\"},\"include\":{},\"exclude\":{},\"proposals\":false,\"shippedProposals\":false,\"debug\":false}},{\"key\":\"preset-env/replace-babel-polyfill\",\"visitor\":{\"ImportDeclaration\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"usage\":true,\"deprecated\":true}}],\"presets\":[]}:7.15.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "C:\\Users\\SalaA\\OneDrive\\Documents\\GitHub\\iTalk\\backend\\src\\Database\\Controllers\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\SalaA\\OneDrive\\Documents\\GitHub\\iTalk\\backend",
      "filename": "C:\\Users\\SalaA\\OneDrive\\Documents\\GitHub\\iTalk\\backend\\src\\Database\\Controllers\\Conversation.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "C:\\Users\\SalaA\\OneDrive\\Documents\\GitHub\\iTalk\\backend",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "BinaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "inject-polyfills",
          "visitor": {
            "MemberExpression": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": {},
            "_verified": {},
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "SpreadElement": {
              "enter": [
                null
              ]
            },
            "YieldExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "method": "usage-global",
            "version": "3.6.5",
            "targets": {
              "chrome": "67.0.0",
              "edge": "17.0.0",
              "firefox": "60.0.0",
              "safari": "11.1.0"
            },
            "include": {},
            "exclude": {},
            "proposals": false,
            "shippedProposals": false,
            "debug": false
          }
        },
        {
          "key": "preset-env/replace-babel-polyfill",
          "visitor": {
            "ImportDeclaration": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "usage": true,
            "deprecated": true
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\SalaA\\OneDrive\\Documents\\GitHub\\iTalk\\backend\\src\\Database\\Controllers\\Conversation.js",
        "plugins": [
          "privateIn",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\SalaA\\OneDrive\\Documents\\GitHub\\iTalk\\backend\\src\\Database\\Controllers\\Conversation.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\SalaA\\OneDrive\\Documents\\GitHub\\iTalk\\backend\\src\\Database\\Controllers\\",
        "sourceFileName": "Conversation.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es.promise.js\");\n\nvar _Conversation = _interopRequireDefault(require(\"../Models/Conversation\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst Recieve = async (Data, ConversationResponse) => {\n  await _Conversation.default.findById(Data.query.ID, (Error, Conversation) => {\n    if (!Error) {\n      ConversationResponse.send(Conversation);\n    } else {\n      ConversationResponse.send(\"Error: \".concat(Error.message));\n    }\n  });\n};\n\nconst NewMessage = async (_ref, SocketIO) => {\n  let {\n    ConversationID,\n    UserID,\n    Message\n  } = _ref;\n  await _Conversation.default.findById(ConversationID, async (Error, Conversation) => {\n    if (Conversation !== null) {\n      let NewConversation = Conversation.Conversation;\n      let NewMessage = {\n        UserID,\n        Message,\n        Date: new Date(),\n        Readed: false\n      };\n      NewConversation.push(NewMessage);\n      Conversation.Conversation = NewConversation;\n      Conversation.save();\n      SocketIO.emit(\"Message\", NewMessage);\n    } else {\n      await _Conversation.default.create({\n        _id: ConversationID,\n        Conversation: [{\n          UserID,\n          Message,\n          Date: new Date(),\n          Readed: false\n        }]\n      });\n      SocketIO.emit(\"Message\", {\n        UserID,\n        Message,\n        Date: new Date(),\n        Readed: false\n      });\n    }\n  });\n};\n\nvar _default = {\n  Recieve,\n  NewMessage\n};\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkNvbnZlcnNhdGlvbi5qcyJdLCJuYW1lcyI6WyJSZWNpZXZlIiwiRGF0YSIsIkNvbnZlcnNhdGlvblJlc3BvbnNlIiwiQ29udmVyc2F0aW9uU2NoZW1hIiwiZmluZEJ5SWQiLCJxdWVyeSIsIklEIiwiRXJyb3IiLCJDb252ZXJzYXRpb24iLCJzZW5kIiwibWVzc2FnZSIsIk5ld01lc3NhZ2UiLCJTb2NrZXRJTyIsIkNvbnZlcnNhdGlvbklEIiwiVXNlcklEIiwiTWVzc2FnZSIsIk5ld0NvbnZlcnNhdGlvbiIsIkRhdGUiLCJSZWFkZWQiLCJwdXNoIiwic2F2ZSIsImVtaXQiLCJjcmVhdGUiLCJfaWQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBOzs7O0FBRUEsTUFBTUEsT0FBTyxHQUFHLE9BQU9DLElBQVAsRUFBYUMsb0JBQWIsS0FBc0M7QUFDbEQsUUFBTUMsc0JBQW1CQyxRQUFuQixDQUE0QkgsSUFBSSxDQUFDSSxLQUFMLENBQVdDLEVBQXZDLEVBQTJDLENBQUNDLEtBQUQsRUFBUUMsWUFBUixLQUF5QjtBQUN0RSxRQUFHLENBQUNELEtBQUosRUFBVTtBQUNOTCxNQUFBQSxvQkFBb0IsQ0FBQ08sSUFBckIsQ0FBMEJELFlBQTFCO0FBQ0gsS0FGRCxNQUdJO0FBQ0FOLE1BQUFBLG9CQUFvQixDQUFDTyxJQUFyQixrQkFBb0NGLEtBQUssQ0FBQ0csT0FBMUM7QUFDSDtBQUNKLEdBUEssQ0FBTjtBQVFILENBVEQ7O0FBV0EsTUFBTUMsVUFBVSxHQUFHLGFBQTBDQyxRQUExQyxLQUF1RDtBQUFBLE1BQWhEO0FBQUNDLElBQUFBLGNBQUQ7QUFBaUJDLElBQUFBLE1BQWpCO0FBQXlCQyxJQUFBQTtBQUF6QixHQUFnRDtBQUN0RSxRQUFNWixzQkFBbUJDLFFBQW5CLENBQTRCUyxjQUE1QixFQUE0QyxPQUFPTixLQUFQLEVBQWNDLFlBQWQsS0FBK0I7QUFDN0UsUUFBR0EsWUFBWSxLQUFLLElBQXBCLEVBQXlCO0FBQ3JCLFVBQUlRLGVBQWUsR0FBR1IsWUFBWSxDQUFDQSxZQUFuQztBQUNBLFVBQUlHLFVBQVUsR0FBRztBQUFDRyxRQUFBQSxNQUFEO0FBQVNDLFFBQUFBLE9BQVQ7QUFBa0JFLFFBQUFBLElBQUksRUFBRSxJQUFJQSxJQUFKLEVBQXhCO0FBQW9DQyxRQUFBQSxNQUFNLEVBQUU7QUFBNUMsT0FBakI7QUFDQUYsTUFBQUEsZUFBZSxDQUFDRyxJQUFoQixDQUFxQlIsVUFBckI7QUFFQUgsTUFBQUEsWUFBWSxDQUFDQSxZQUFiLEdBQTRCUSxlQUE1QjtBQUNBUixNQUFBQSxZQUFZLENBQUNZLElBQWI7QUFFQVIsTUFBQUEsUUFBUSxDQUFDUyxJQUFULENBQWMsU0FBZCxFQUF5QlYsVUFBekI7QUFDSCxLQVRELE1BVUk7QUFDQSxZQUFNUixzQkFBbUJtQixNQUFuQixDQUEwQjtBQUM1QkMsUUFBQUEsR0FBRyxFQUFFVixjQUR1QjtBQUU1QkwsUUFBQUEsWUFBWSxFQUFFLENBQ1Y7QUFDSU0sVUFBQUEsTUFESjtBQUVJQyxVQUFBQSxPQUZKO0FBR0lFLFVBQUFBLElBQUksRUFBRSxJQUFJQSxJQUFKLEVBSFY7QUFJSUMsVUFBQUEsTUFBTSxFQUFFO0FBSlosU0FEVTtBQUZjLE9BQTFCLENBQU47QUFZQU4sTUFBQUEsUUFBUSxDQUFDUyxJQUFULENBQWMsU0FBZCxFQUF5QjtBQUFDUCxRQUFBQSxNQUFEO0FBQVNDLFFBQUFBLE9BQVQ7QUFBa0JFLFFBQUFBLElBQUksRUFBRSxJQUFJQSxJQUFKLEVBQXhCO0FBQW9DQyxRQUFBQSxNQUFNLEVBQUU7QUFBNUMsT0FBekI7QUFDSDtBQUNKLEdBMUJLLENBQU47QUEyQkgsQ0E1QkQ7O2VBOEJlO0FBQUNsQixFQUFBQSxPQUFEO0FBQVVXLEVBQUFBO0FBQVYsQyIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXFNhbGFBXFxPbmVEcml2ZVxcRG9jdW1lbnRzXFxHaXRIdWJcXGlUYWxrXFxiYWNrZW5kXFxzcmNcXERhdGFiYXNlXFxDb250cm9sbGVyc1xcIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IENvbnZlcnNhdGlvblNjaGVtYSBmcm9tIFwiLi4vTW9kZWxzL0NvbnZlcnNhdGlvblwiO1xyXG5cclxuY29uc3QgUmVjaWV2ZSA9IGFzeW5jIChEYXRhLCBDb252ZXJzYXRpb25SZXNwb25zZSkgPT4ge1xyXG4gICAgYXdhaXQgQ29udmVyc2F0aW9uU2NoZW1hLmZpbmRCeUlkKERhdGEucXVlcnkuSUQsIChFcnJvciwgQ29udmVyc2F0aW9uKSA9PiB7XHJcbiAgICAgICAgaWYoIUVycm9yKXtcclxuICAgICAgICAgICAgQ29udmVyc2F0aW9uUmVzcG9uc2Uuc2VuZChDb252ZXJzYXRpb24pO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNle1xyXG4gICAgICAgICAgICBDb252ZXJzYXRpb25SZXNwb25zZS5zZW5kKGBFcnJvcjogJHtFcnJvci5tZXNzYWdlfWApXHJcbiAgICAgICAgfVxyXG4gICAgfSk7XHJcbn07XHJcblxyXG5jb25zdCBOZXdNZXNzYWdlID0gYXN5bmMgKHtDb252ZXJzYXRpb25JRCwgVXNlcklELCBNZXNzYWdlfSwgU29ja2V0SU8pID0+IHtcclxuICAgIGF3YWl0IENvbnZlcnNhdGlvblNjaGVtYS5maW5kQnlJZChDb252ZXJzYXRpb25JRCwgYXN5bmMgKEVycm9yLCBDb252ZXJzYXRpb24pID0+IHtcclxuICAgICAgICBpZihDb252ZXJzYXRpb24gIT09IG51bGwpe1xyXG4gICAgICAgICAgICBsZXQgTmV3Q29udmVyc2F0aW9uID0gQ29udmVyc2F0aW9uLkNvbnZlcnNhdGlvbjtcclxuICAgICAgICAgICAgbGV0IE5ld01lc3NhZ2UgPSB7VXNlcklELCBNZXNzYWdlLCBEYXRlOiBuZXcgRGF0ZSgpLCBSZWFkZWQ6IGZhbHNlfTtcclxuICAgICAgICAgICAgTmV3Q29udmVyc2F0aW9uLnB1c2goTmV3TWVzc2FnZSk7XHJcblxyXG4gICAgICAgICAgICBDb252ZXJzYXRpb24uQ29udmVyc2F0aW9uID0gTmV3Q29udmVyc2F0aW9uO1xyXG4gICAgICAgICAgICBDb252ZXJzYXRpb24uc2F2ZSgpO1xyXG5cclxuICAgICAgICAgICAgU29ja2V0SU8uZW1pdChcIk1lc3NhZ2VcIiwgTmV3TWVzc2FnZSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2V7XHJcbiAgICAgICAgICAgIGF3YWl0IENvbnZlcnNhdGlvblNjaGVtYS5jcmVhdGUoe1xyXG4gICAgICAgICAgICAgICAgX2lkOiBDb252ZXJzYXRpb25JRCxcclxuICAgICAgICAgICAgICAgIENvbnZlcnNhdGlvbjogW1xyXG4gICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgVXNlcklELFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBNZXNzYWdlLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBEYXRlOiBuZXcgRGF0ZSgpLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBSZWFkZWQ6IGZhbHNlXHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgXVxyXG4gICAgICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgICAgIFNvY2tldElPLmVtaXQoXCJNZXNzYWdlXCIsIHtVc2VySUQsIE1lc3NhZ2UsIERhdGU6IG5ldyBEYXRlKCksIFJlYWRlZDogZmFsc2V9KTtcclxuICAgICAgICB9XHJcbiAgICB9KVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCB7UmVjaWV2ZSwgTmV3TWVzc2FnZX07Il19",
    "map": {
      "version": 3,
      "sources": [
        "Conversation.js"
      ],
      "names": [
        "Recieve",
        "Data",
        "ConversationResponse",
        "ConversationSchema",
        "findById",
        "query",
        "ID",
        "Error",
        "Conversation",
        "send",
        "message",
        "NewMessage",
        "SocketIO",
        "ConversationID",
        "UserID",
        "Message",
        "NewConversation",
        "Date",
        "Readed",
        "push",
        "save",
        "emit",
        "create",
        "_id"
      ],
      "mappings": ";;;;;;;;;AAAA;;;;AAEA,MAAMA,OAAO,GAAG,OAAOC,IAAP,EAAaC,oBAAb,KAAsC;AAClD,QAAMC,sBAAmBC,QAAnB,CAA4BH,IAAI,CAACI,KAAL,CAAWC,EAAvC,EAA2C,CAACC,KAAD,EAAQC,YAAR,KAAyB;AACtE,QAAG,CAACD,KAAJ,EAAU;AACNL,MAAAA,oBAAoB,CAACO,IAArB,CAA0BD,YAA1B;AACH,KAFD,MAGI;AACAN,MAAAA,oBAAoB,CAACO,IAArB,kBAAoCF,KAAK,CAACG,OAA1C;AACH;AACJ,GAPK,CAAN;AAQH,CATD;;AAWA,MAAMC,UAAU,GAAG,aAA0CC,QAA1C,KAAuD;AAAA,MAAhD;AAACC,IAAAA,cAAD;AAAiBC,IAAAA,MAAjB;AAAyBC,IAAAA;AAAzB,GAAgD;AACtE,QAAMZ,sBAAmBC,QAAnB,CAA4BS,cAA5B,EAA4C,OAAON,KAAP,EAAcC,YAAd,KAA+B;AAC7E,QAAGA,YAAY,KAAK,IAApB,EAAyB;AACrB,UAAIQ,eAAe,GAAGR,YAAY,CAACA,YAAnC;AACA,UAAIG,UAAU,GAAG;AAACG,QAAAA,MAAD;AAASC,QAAAA,OAAT;AAAkBE,QAAAA,IAAI,EAAE,IAAIA,IAAJ,EAAxB;AAAoCC,QAAAA,MAAM,EAAE;AAA5C,OAAjB;AACAF,MAAAA,eAAe,CAACG,IAAhB,CAAqBR,UAArB;AAEAH,MAAAA,YAAY,CAACA,YAAb,GAA4BQ,eAA5B;AACAR,MAAAA,YAAY,CAACY,IAAb;AAEAR,MAAAA,QAAQ,CAACS,IAAT,CAAc,SAAd,EAAyBV,UAAzB;AACH,KATD,MAUI;AACA,YAAMR,sBAAmBmB,MAAnB,CAA0B;AAC5BC,QAAAA,GAAG,EAAEV,cADuB;AAE5BL,QAAAA,YAAY,EAAE,CACV;AACIM,UAAAA,MADJ;AAEIC,UAAAA,OAFJ;AAGIE,UAAAA,IAAI,EAAE,IAAIA,IAAJ,EAHV;AAIIC,UAAAA,MAAM,EAAE;AAJZ,SADU;AAFc,OAA1B,CAAN;AAYAN,MAAAA,QAAQ,CAACS,IAAT,CAAc,SAAd,EAAyB;AAACP,QAAAA,MAAD;AAASC,QAAAA,OAAT;AAAkBE,QAAAA,IAAI,EAAE,IAAIA,IAAJ,EAAxB;AAAoCC,QAAAA,MAAM,EAAE;AAA5C,OAAzB;AACH;AACJ,GA1BK,CAAN;AA2BH,CA5BD;;eA8Be;AAAClB,EAAAA,OAAD;AAAUW,EAAAA;AAAV,C",
      "sourceRoot": "C:\\Users\\SalaA\\OneDrive\\Documents\\GitHub\\iTalk\\backend\\src\\Database\\Controllers\\",
      "sourcesContent": [
        "import ConversationSchema from \"../Models/Conversation\";\r\n\r\nconst Recieve = async (Data, ConversationResponse) => {\r\n    await ConversationSchema.findById(Data.query.ID, (Error, Conversation) => {\r\n        if(!Error){\r\n            ConversationResponse.send(Conversation);\r\n        }\r\n        else{\r\n            ConversationResponse.send(`Error: ${Error.message}`)\r\n        }\r\n    });\r\n};\r\n\r\nconst NewMessage = async ({ConversationID, UserID, Message}, SocketIO) => {\r\n    await ConversationSchema.findById(ConversationID, async (Error, Conversation) => {\r\n        if(Conversation !== null){\r\n            let NewConversation = Conversation.Conversation;\r\n            let NewMessage = {UserID, Message, Date: new Date(), Readed: false};\r\n            NewConversation.push(NewMessage);\r\n\r\n            Conversation.Conversation = NewConversation;\r\n            Conversation.save();\r\n\r\n            SocketIO.emit(\"Message\", NewMessage);\r\n        }\r\n        else{\r\n            await ConversationSchema.create({\r\n                _id: ConversationID,\r\n                Conversation: [\r\n                    {\r\n                        UserID,\r\n                        Message,\r\n                        Date: new Date(),\r\n                        Readed: false\r\n                    }\r\n                ]\r\n            });\r\n\r\n            SocketIO.emit(\"Message\", {UserID, Message, Date: new Date(), Readed: false});\r\n        }\r\n    })\r\n}\r\n\r\nexport default {Recieve, NewMessage};"
      ]
    },
    "sourceType": "script",
    "mtime": 1637703702923
  },
  "{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\SalaA\\\\OneDrive\\\\Documents\\\\GitHub\\\\iTalk\\\\backend\\\\src\\\\Database\\\\Models\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\SalaA\\\\OneDrive\\\\Documents\\\\GitHub\\\\iTalk\\\\backend\",\"filename\":\"C:\\\\Users\\\\SalaA\\\\OneDrive\\\\Documents\\\\GitHub\\\\iTalk\\\\backend\\\\src\\\\Database\\\\Models\\\\Conversation.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\SalaA\\\\OneDrive\\\\Documents\\\\GitHub\\\\iTalk\\\\backend\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":true}},{\"key\":\"inject-polyfills\",\"visitor\":{\"MemberExpression\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":{},\"_verified\":{},\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"SpreadElement\":{\"enter\":[null]},\"YieldExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"method\":\"usage-global\",\"version\":\"3.6.5\",\"targets\":{\"chrome\":\"67.0.0\",\"edge\":\"17.0.0\",\"firefox\":\"60.0.0\",\"safari\":\"11.1.0\"},\"include\":{},\"exclude\":{},\"proposals\":false,\"shippedProposals\":false,\"debug\":false}},{\"key\":\"preset-env/replace-babel-polyfill\",\"visitor\":{\"ImportDeclaration\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"usage\":true,\"deprecated\":true}}],\"presets\":[]}:7.15.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "C:\\Users\\SalaA\\OneDrive\\Documents\\GitHub\\iTalk\\backend\\src\\Database\\Models\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\SalaA\\OneDrive\\Documents\\GitHub\\iTalk\\backend",
      "filename": "C:\\Users\\SalaA\\OneDrive\\Documents\\GitHub\\iTalk\\backend\\src\\Database\\Models\\Conversation.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "C:\\Users\\SalaA\\OneDrive\\Documents\\GitHub\\iTalk\\backend",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "BinaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": true
          }
        },
        {
          "key": "inject-polyfills",
          "visitor": {
            "MemberExpression": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": {},
            "_verified": {},
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "SpreadElement": {
              "enter": [
                null
              ]
            },
            "YieldExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "method": "usage-global",
            "version": "3.6.5",
            "targets": {
              "chrome": "67.0.0",
              "edge": "17.0.0",
              "firefox": "60.0.0",
              "safari": "11.1.0"
            },
            "include": {},
            "exclude": {},
            "proposals": false,
            "shippedProposals": false,
            "debug": false
          }
        },
        {
          "key": "preset-env/replace-babel-polyfill",
          "visitor": {
            "ImportDeclaration": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "usage": true,
            "deprecated": true
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\SalaA\\OneDrive\\Documents\\GitHub\\iTalk\\backend\\src\\Database\\Models\\Conversation.js",
        "plugins": [
          "privateIn",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\SalaA\\OneDrive\\Documents\\GitHub\\iTalk\\backend\\src\\Database\\Models\\Conversation.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\SalaA\\OneDrive\\Documents\\GitHub\\iTalk\\backend\\src\\Database\\Models\\",
        "sourceFileName": "Conversation.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _mongoose = require(\"mongoose\");\n\nconst ConversationModel = new _mongoose.Schema({\n  _id: {\n    type: String\n  },\n  Conversation: [{\n    UserID: {\n      type: String\n    },\n    Message: {\n      type: String\n    },\n    Date: {\n      type: Date\n    },\n    Readed: {\n      type: Boolean\n    }\n  }]\n});\nmodule.exports = new _mongoose.model(\"Conversation\", ConversationModel);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkNvbnZlcnNhdGlvbi5qcyJdLCJuYW1lcyI6WyJDb252ZXJzYXRpb25Nb2RlbCIsIlNjaGVtYSIsIl9pZCIsInR5cGUiLCJTdHJpbmciLCJDb252ZXJzYXRpb24iLCJVc2VySUQiLCJNZXNzYWdlIiwiRGF0ZSIsIlJlYWRlZCIsIkJvb2xlYW4iLCJtb2R1bGUiLCJleHBvcnRzIiwibW9kZWwiXSwibWFwcGluZ3MiOiI7O0FBQUE7O0FBRUEsTUFBTUEsaUJBQWlCLEdBQUcsSUFBSUMsZ0JBQUosQ0FBVztBQUNqQ0MsRUFBQUEsR0FBRyxFQUFFO0FBQUVDLElBQUFBLElBQUksRUFBRUM7QUFBUixHQUQ0QjtBQUVqQ0MsRUFBQUEsWUFBWSxFQUFFLENBQUM7QUFDWEMsSUFBQUEsTUFBTSxFQUFFO0FBQUNILE1BQUFBLElBQUksRUFBRUM7QUFBUCxLQURHO0FBRVhHLElBQUFBLE9BQU8sRUFBRTtBQUFFSixNQUFBQSxJQUFJLEVBQUVDO0FBQVIsS0FGRTtBQUdYSSxJQUFBQSxJQUFJLEVBQUU7QUFBRUwsTUFBQUEsSUFBSSxFQUFFSztBQUFSLEtBSEs7QUFJWEMsSUFBQUEsTUFBTSxFQUFFO0FBQUVOLE1BQUFBLElBQUksRUFBRU87QUFBUjtBQUpHLEdBQUQ7QUFGbUIsQ0FBWCxDQUExQjtBQVVBQyxNQUFNLENBQUNDLE9BQVAsR0FBaUIsSUFBSUMsZUFBSixDQUFVLGNBQVYsRUFBMEJiLGlCQUExQixDQUFqQiIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXFNhbGFBXFxPbmVEcml2ZVxcRG9jdW1lbnRzXFxHaXRIdWJcXGlUYWxrXFxiYWNrZW5kXFxzcmNcXERhdGFiYXNlXFxNb2RlbHNcXCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7U2NoZW1hLCBtb2RlbH0gZnJvbSBcIm1vbmdvb3NlXCI7XHJcblxyXG5jb25zdCBDb252ZXJzYXRpb25Nb2RlbCA9IG5ldyBTY2hlbWEoe1xyXG4gICAgX2lkOiB7IHR5cGU6IFN0cmluZyB9LFxyXG4gICAgQ29udmVyc2F0aW9uOiBbe1xyXG4gICAgICAgIFVzZXJJRDoge3R5cGU6IFN0cmluZyB9LFxyXG4gICAgICAgIE1lc3NhZ2U6IHsgdHlwZTogU3RyaW5nIH0sXHJcbiAgICAgICAgRGF0ZTogeyB0eXBlOiBEYXRlIH0sXHJcbiAgICAgICAgUmVhZGVkOiB7IHR5cGU6IEJvb2xlYW4gfVxyXG4gICAgfV1cclxufSk7XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IG5ldyBtb2RlbChcIkNvbnZlcnNhdGlvblwiLCBDb252ZXJzYXRpb25Nb2RlbCk7Il19",
    "map": {
      "version": 3,
      "sources": [
        "Conversation.js"
      ],
      "names": [
        "ConversationModel",
        "Schema",
        "_id",
        "type",
        "String",
        "Conversation",
        "UserID",
        "Message",
        "Date",
        "Readed",
        "Boolean",
        "module",
        "exports",
        "model"
      ],
      "mappings": ";;AAAA;;AAEA,MAAMA,iBAAiB,GAAG,IAAIC,gBAAJ,CAAW;AACjCC,EAAAA,GAAG,EAAE;AAAEC,IAAAA,IAAI,EAAEC;AAAR,GAD4B;AAEjCC,EAAAA,YAAY,EAAE,CAAC;AACXC,IAAAA,MAAM,EAAE;AAACH,MAAAA,IAAI,EAAEC;AAAP,KADG;AAEXG,IAAAA,OAAO,EAAE;AAAEJ,MAAAA,IAAI,EAAEC;AAAR,KAFE;AAGXI,IAAAA,IAAI,EAAE;AAAEL,MAAAA,IAAI,EAAEK;AAAR,KAHK;AAIXC,IAAAA,MAAM,EAAE;AAAEN,MAAAA,IAAI,EAAEO;AAAR;AAJG,GAAD;AAFmB,CAAX,CAA1B;AAUAC,MAAM,CAACC,OAAP,GAAiB,IAAIC,eAAJ,CAAU,cAAV,EAA0Bb,iBAA1B,CAAjB",
      "sourceRoot": "C:\\Users\\SalaA\\OneDrive\\Documents\\GitHub\\iTalk\\backend\\src\\Database\\Models\\",
      "sourcesContent": [
        "import {Schema, model} from \"mongoose\";\r\n\r\nconst ConversationModel = new Schema({\r\n    _id: { type: String },\r\n    Conversation: [{\r\n        UserID: {type: String },\r\n        Message: { type: String },\r\n        Date: { type: Date },\r\n        Readed: { type: Boolean }\r\n    }]\r\n});\r\n\r\nmodule.exports = new model(\"Conversation\", ConversationModel);"
      ]
    },
    "sourceType": "script",
    "mtime": 1637511245952
  }
}